/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.exportSymbol('proto.FINNOQ_API.Answer', null, global);
goog.exportSymbol('proto.FINNOQ_API.AnswerList', null, global);
goog.exportSymbol('proto.FINNOQ_API.AnswerResult', null, global);
goog.exportSymbol('proto.FINNOQ_API.AuthRequest', null, global);
goog.exportSymbol('proto.FINNOQ_API.AuthResponse', null, global);
goog.exportSymbol('proto.FINNOQ_API.Category', null, global);
goog.exportSymbol('proto.FINNOQ_API.CategoryList', null, global);
goog.exportSymbol('proto.FINNOQ_API.Country', null, global);
goog.exportSymbol('proto.FINNOQ_API.CountryList', null, global);
goog.exportSymbol('proto.FINNOQ_API.Credit', null, global);
goog.exportSymbol('proto.FINNOQ_API.CreditList', null, global);
goog.exportSymbol('proto.FINNOQ_API.Error', null, global);
goog.exportSymbol('proto.FINNOQ_API.FirebaseToken', null, global);
goog.exportSymbol('proto.FINNOQ_API.Leaderboard', null, global);
goog.exportSymbol('proto.FINNOQ_API.Notification', null, global);
goog.exportSymbol('proto.FINNOQ_API.NotificationList', null, global);
goog.exportSymbol('proto.FINNOQ_API.NotificationSetting', null, global);
goog.exportSymbol('proto.FINNOQ_API.NotificationSettingList', null, global);
goog.exportSymbol('proto.FINNOQ_API.NotificationType', null, global);
goog.exportSymbol('proto.FINNOQ_API.NotificationTypeList', null, global);
goog.exportSymbol('proto.FINNOQ_API.Poll', null, global);
goog.exportSymbol('proto.FINNOQ_API.PollList', null, global);
goog.exportSymbol('proto.FINNOQ_API.PollResult', null, global);
goog.exportSymbol('proto.FINNOQ_API.Profession', null, global);
goog.exportSymbol('proto.FINNOQ_API.ProfessionList', null, global);
goog.exportSymbol('proto.FINNOQ_API.Question', null, global);
goog.exportSymbol('proto.FINNOQ_API.QuestionList', null, global);
goog.exportSymbol('proto.FINNOQ_API.QuestionResult', null, global);
goog.exportSymbol('proto.FINNOQ_API.ReferralCredit', null, global);
goog.exportSymbol('proto.FINNOQ_API.ReferralCreditList', null, global);
goog.exportSymbol('proto.FINNOQ_API.ReferralResponse', null, global);
goog.exportSymbol('proto.FINNOQ_API.ReferralResponseList', null, global);
goog.exportSymbol('proto.FINNOQ_API.SocialAuthRequest', null, global);
goog.exportSymbol('proto.FINNOQ_API.SocialAuthResponse', null, global);
goog.exportSymbol('proto.FINNOQ_API.Suggestion', null, global);
goog.exportSymbol('proto.FINNOQ_API.SuggestionList', null, global);
goog.exportSymbol('proto.FINNOQ_API.Transaction', null, global);
goog.exportSymbol('proto.FINNOQ_API.TransactionsList', null, global);
goog.exportSymbol('proto.FINNOQ_API.TransactionsList.Type', null, global);
goog.exportSymbol('proto.FINNOQ_API.User', null, global);
goog.exportSymbol('proto.FINNOQ_API.User.Gender', null, global);
goog.exportSymbol('proto.FINNOQ_API.User.GroupOfAge', null, global);
goog.exportSymbol('proto.FINNOQ_API.UserAnswerLists', null, global);
goog.exportSymbol('proto.FINNOQ_API.UserLeadboard', null, global);
goog.exportSymbol('proto.FINNOQ_API.UserList', null, global);
goog.exportSymbol('proto.FINNOQ_API.UserPollLists', null, global);
goog.exportSymbol('proto.FINNOQ_API.UserQuestionLists', null, global);
goog.exportSymbol('proto.FINNOQ_API.ViewedNotification', null, global);
goog.exportSymbol('proto.FINNOQ_API.Vote', null, global);
goog.exportSymbol('proto.FINNOQ_API.VoteList', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.AuthRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.AuthRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.AuthRequest.displayName = 'proto.FINNOQ_API.AuthRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.AuthRequest.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.AuthRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.AuthRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.AuthRequest.toObject = function(includeInstance, msg) {
    var f, obj = {
      grantType: jspb.Message.getFieldWithDefault(msg, 1, ""),
      clientId: jspb.Message.getFieldWithDefault(msg, 2, ""),
      clientSecret: jspb.Message.getFieldWithDefault(msg, 3, ""),
      username: jspb.Message.getFieldWithDefault(msg, 4, ""),
      password: jspb.Message.getFieldWithDefault(msg, 5, ""),
      refreshToken: jspb.Message.getFieldWithDefault(msg, 6, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.AuthRequest}
 */
proto.FINNOQ_API.AuthRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.AuthRequest;
  return proto.FINNOQ_API.AuthRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.AuthRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.AuthRequest}
 */
proto.FINNOQ_API.AuthRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setGrantType(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setClientId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setClientSecret(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setUsername(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setPassword(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setRefreshToken(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.AuthRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.AuthRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.AuthRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.AuthRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGrantType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClientSecret();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRefreshToken();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string grant_type = 1;
 * @return {string}
 */
proto.FINNOQ_API.AuthRequest.prototype.getGrantType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.FINNOQ_API.AuthRequest.prototype.setGrantType = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_id = 2;
 * @return {string}
 */
proto.FINNOQ_API.AuthRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.FINNOQ_API.AuthRequest.prototype.setClientId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string client_secret = 3;
 * @return {string}
 */
proto.FINNOQ_API.AuthRequest.prototype.getClientSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.FINNOQ_API.AuthRequest.prototype.setClientSecret = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.FINNOQ_API.AuthRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.FINNOQ_API.AuthRequest.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.FINNOQ_API.AuthRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.FINNOQ_API.AuthRequest.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string refresh_token = 6;
 * @return {string}
 */
proto.FINNOQ_API.AuthRequest.prototype.getRefreshToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.FINNOQ_API.AuthRequest.prototype.setRefreshToken = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.AuthResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.AuthResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.AuthResponse.displayName = 'proto.FINNOQ_API.AuthResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.AuthResponse.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.AuthResponse.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.AuthResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.AuthResponse.toObject = function(includeInstance, msg) {
    var f, obj = {
      accessToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
      expiresIn: jspb.Message.getFieldWithDefault(msg, 2, 0),
      tokenType: jspb.Message.getFieldWithDefault(msg, 3, ""),
      scope: jspb.Message.getFieldWithDefault(msg, 4, ""),
      refreshToken: jspb.Message.getFieldWithDefault(msg, 5, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.AuthResponse}
 */
proto.FINNOQ_API.AuthResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.AuthResponse;
  return proto.FINNOQ_API.AuthResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.AuthResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.AuthResponse}
 */
proto.FINNOQ_API.AuthResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccessToken(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setExpiresIn(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setTokenType(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setScope(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setRefreshToken(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.AuthResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.AuthResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.AuthResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.AuthResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExpiresIn();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTokenType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRefreshToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string access_token = 1;
 * @return {string}
 */
proto.FINNOQ_API.AuthResponse.prototype.getAccessToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.FINNOQ_API.AuthResponse.prototype.setAccessToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 expires_in = 2;
 * @return {number}
 */
proto.FINNOQ_API.AuthResponse.prototype.getExpiresIn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.FINNOQ_API.AuthResponse.prototype.setExpiresIn = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string token_type = 3;
 * @return {string}
 */
proto.FINNOQ_API.AuthResponse.prototype.getTokenType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.FINNOQ_API.AuthResponse.prototype.setTokenType = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string scope = 4;
 * @return {string}
 */
proto.FINNOQ_API.AuthResponse.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.FINNOQ_API.AuthResponse.prototype.setScope = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string refresh_token = 5;
 * @return {string}
 */
proto.FINNOQ_API.AuthResponse.prototype.getRefreshToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.FINNOQ_API.AuthResponse.prototype.setRefreshToken = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.Error.displayName = 'proto.FINNOQ_API.Error';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.Error.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.Error.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.Error} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.Error.toObject = function(includeInstance, msg) {
    var f, obj = {
      reason: jspb.Message.getFieldWithDefault(msg, 1, ""),
      statusCode: jspb.Message.getFieldWithDefault(msg, 2, 0),
      message: jspb.Message.getFieldWithDefault(msg, 3, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.Error}
 */
proto.FINNOQ_API.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.Error;
  return proto.FINNOQ_API.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.Error}
 */
proto.FINNOQ_API.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setReason(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setStatusCode(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setMessage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatusCode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string reason = 1;
 * @return {string}
 */
proto.FINNOQ_API.Error.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Error.prototype.setReason = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 status_code = 2;
 * @return {number}
 */
proto.FINNOQ_API.Error.prototype.getStatusCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Error.prototype.setStatusCode = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.FINNOQ_API.Error.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Error.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.Category = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.Category.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.Category, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.Category.displayName = 'proto.FINNOQ_API.Category';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.Category.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.Category.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.Category.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.Category} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.Category.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      title: jspb.Message.getFieldWithDefault(msg, 2, ""),
      subcategoriesList: jspb.Message.toObjectList(msg.getSubcategoriesList(),
        proto.FINNOQ_API.Category.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.Category}
 */
proto.FINNOQ_API.Category.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.Category;
  return proto.FINNOQ_API.Category.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.Category} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.Category}
 */
proto.FINNOQ_API.Category.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 3:
        var value = new proto.FINNOQ_API.Category;
        reader.readMessage(value,proto.FINNOQ_API.Category.deserializeBinaryFromReader);
        msg.addSubcategories(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.Category.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.Category.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.Category} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.Category.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubcategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.FINNOQ_API.Category.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.Category.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Category.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.FINNOQ_API.Category.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Category.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Category subcategories = 3;
 * @return {!Array<!proto.FINNOQ_API.Category>}
 */
proto.FINNOQ_API.Category.prototype.getSubcategoriesList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Category, 3));
};


/** @param {!Array<!proto.FINNOQ_API.Category>} value */
proto.FINNOQ_API.Category.prototype.setSubcategoriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.FINNOQ_API.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Category}
 */
proto.FINNOQ_API.Category.prototype.addSubcategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.FINNOQ_API.Category, opt_index);
};


proto.FINNOQ_API.Category.prototype.clearSubcategoriesList = function() {
  this.setSubcategoriesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.CategoryList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.CategoryList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.CategoryList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.CategoryList.displayName = 'proto.FINNOQ_API.CategoryList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.CategoryList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.CategoryList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.CategoryList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.CategoryList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.CategoryList.toObject = function(includeInstance, msg) {
    var f, obj = {
      categoriesList: jspb.Message.toObjectList(msg.getCategoriesList(),
        proto.FINNOQ_API.Category.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.CategoryList}
 */
proto.FINNOQ_API.CategoryList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.CategoryList;
  return proto.FINNOQ_API.CategoryList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.CategoryList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.CategoryList}
 */
proto.FINNOQ_API.CategoryList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.Category;
        reader.readMessage(value,proto.FINNOQ_API.Category.deserializeBinaryFromReader);
        msg.addCategories(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.CategoryList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.CategoryList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.CategoryList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.CategoryList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.Category.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Category categories = 1;
 * @return {!Array<!proto.FINNOQ_API.Category>}
 */
proto.FINNOQ_API.CategoryList.prototype.getCategoriesList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Category, 1));
};


/** @param {!Array<!proto.FINNOQ_API.Category>} value */
proto.FINNOQ_API.CategoryList.prototype.setCategoriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Category}
 */
proto.FINNOQ_API.CategoryList.prototype.addCategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.Category, opt_index);
};


proto.FINNOQ_API.CategoryList.prototype.clearCategoriesList = function() {
  this.setCategoriesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.Country = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.Country, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.Country.displayName = 'proto.FINNOQ_API.Country';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.Country.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.Country.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.Country} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.Country.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      iso: jspb.Message.getFieldWithDefault(msg, 2, ""),
      title: jspb.Message.getFieldWithDefault(msg, 3, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.Country}
 */
proto.FINNOQ_API.Country.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.Country;
  return proto.FINNOQ_API.Country.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.Country} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.Country}
 */
proto.FINNOQ_API.Country.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setIso(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.Country.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.Country.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.Country} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.Country.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getIso();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.Country.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Country.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string ISO = 2;
 * @return {string}
 */
proto.FINNOQ_API.Country.prototype.getIso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Country.prototype.setIso = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.FINNOQ_API.Country.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Country.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.CountryList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.CountryList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.CountryList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.CountryList.displayName = 'proto.FINNOQ_API.CountryList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.CountryList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.CountryList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.CountryList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.CountryList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.CountryList.toObject = function(includeInstance, msg) {
    var f, obj = {
      countriesList: jspb.Message.toObjectList(msg.getCountriesList(),
        proto.FINNOQ_API.Country.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.CountryList}
 */
proto.FINNOQ_API.CountryList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.CountryList;
  return proto.FINNOQ_API.CountryList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.CountryList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.CountryList}
 */
proto.FINNOQ_API.CountryList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.Country;
        reader.readMessage(value,proto.FINNOQ_API.Country.deserializeBinaryFromReader);
        msg.addCountries(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.CountryList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.CountryList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.CountryList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.CountryList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.Country.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Country countries = 1;
 * @return {!Array<!proto.FINNOQ_API.Country>}
 */
proto.FINNOQ_API.CountryList.prototype.getCountriesList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Country>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Country, 1));
};


/** @param {!Array<!proto.FINNOQ_API.Country>} value */
proto.FINNOQ_API.CountryList.prototype.setCountriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.Country=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Country}
 */
proto.FINNOQ_API.CountryList.prototype.addCountries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.Country, opt_index);
};


proto.FINNOQ_API.CountryList.prototype.clearCountriesList = function() {
  this.setCountriesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.Profession = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.Profession, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.Profession.displayName = 'proto.FINNOQ_API.Profession';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.Profession.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.Profession.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.Profession} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.Profession.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      title: jspb.Message.getFieldWithDefault(msg, 2, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.Profession}
 */
proto.FINNOQ_API.Profession.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.Profession;
  return proto.FINNOQ_API.Profession.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.Profession} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.Profession}
 */
proto.FINNOQ_API.Profession.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.Profession.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.Profession.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.Profession} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.Profession.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.Profession.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Profession.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.FINNOQ_API.Profession.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Profession.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.ProfessionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.ProfessionList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.ProfessionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.ProfessionList.displayName = 'proto.FINNOQ_API.ProfessionList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.ProfessionList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.ProfessionList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.ProfessionList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.ProfessionList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.ProfessionList.toObject = function(includeInstance, msg) {
    var f, obj = {
      professionsList: jspb.Message.toObjectList(msg.getProfessionsList(),
        proto.FINNOQ_API.Profession.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.ProfessionList}
 */
proto.FINNOQ_API.ProfessionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.ProfessionList;
  return proto.FINNOQ_API.ProfessionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.ProfessionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.ProfessionList}
 */
proto.FINNOQ_API.ProfessionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.Profession;
        reader.readMessage(value,proto.FINNOQ_API.Profession.deserializeBinaryFromReader);
        msg.addProfessions(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.ProfessionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.ProfessionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.ProfessionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.ProfessionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfessionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.Profession.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Profession professions = 1;
 * @return {!Array<!proto.FINNOQ_API.Profession>}
 */
proto.FINNOQ_API.ProfessionList.prototype.getProfessionsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Profession>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Profession, 1));
};


/** @param {!Array<!proto.FINNOQ_API.Profession>} value */
proto.FINNOQ_API.ProfessionList.prototype.setProfessionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.Profession=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Profession}
 */
proto.FINNOQ_API.ProfessionList.prototype.addProfessions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.Profession, opt_index);
};


proto.FINNOQ_API.ProfessionList.prototype.clearProfessionsList = function() {
  this.setProfessionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.NotificationType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.NotificationType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.NotificationType.displayName = 'proto.FINNOQ_API.NotificationType';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.NotificationType.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.NotificationType.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.NotificationType} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.NotificationType.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      label: jspb.Message.getFieldWithDefault(msg, 2, ""),
      priority: jspb.Message.getFieldWithDefault(msg, 3, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.NotificationType}
 */
proto.FINNOQ_API.NotificationType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.NotificationType;
  return proto.FINNOQ_API.NotificationType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.NotificationType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.NotificationType}
 */
proto.FINNOQ_API.NotificationType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setLabel(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPriority(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.NotificationType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.NotificationType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.NotificationType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.NotificationType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.NotificationType.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.NotificationType.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.FINNOQ_API.NotificationType.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.FINNOQ_API.NotificationType.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 priority = 3;
 * @return {number}
 */
proto.FINNOQ_API.NotificationType.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.FINNOQ_API.NotificationType.prototype.setPriority = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.NotificationTypeList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.NotificationTypeList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.NotificationTypeList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.NotificationTypeList.displayName = 'proto.FINNOQ_API.NotificationTypeList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.NotificationTypeList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.NotificationTypeList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.NotificationTypeList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.NotificationTypeList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.NotificationTypeList.toObject = function(includeInstance, msg) {
    var f, obj = {
      notificationTypesList: jspb.Message.toObjectList(msg.getNotificationTypesList(),
        proto.FINNOQ_API.NotificationType.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.NotificationTypeList}
 */
proto.FINNOQ_API.NotificationTypeList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.NotificationTypeList;
  return proto.FINNOQ_API.NotificationTypeList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.NotificationTypeList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.NotificationTypeList}
 */
proto.FINNOQ_API.NotificationTypeList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.NotificationType;
        reader.readMessage(value,proto.FINNOQ_API.NotificationType.deserializeBinaryFromReader);
        msg.addNotificationTypes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.NotificationTypeList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.NotificationTypeList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.NotificationTypeList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.NotificationTypeList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotificationTypesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.NotificationType.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NotificationType notification_types = 1;
 * @return {!Array<!proto.FINNOQ_API.NotificationType>}
 */
proto.FINNOQ_API.NotificationTypeList.prototype.getNotificationTypesList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.NotificationType>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.NotificationType, 1));
};


/** @param {!Array<!proto.FINNOQ_API.NotificationType>} value */
proto.FINNOQ_API.NotificationTypeList.prototype.setNotificationTypesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.NotificationType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.NotificationType}
 */
proto.FINNOQ_API.NotificationTypeList.prototype.addNotificationTypes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.NotificationType, opt_index);
};


proto.FINNOQ_API.NotificationTypeList.prototype.clearNotificationTypesList = function() {
  this.setNotificationTypesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.Notification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.Notification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.Notification.displayName = 'proto.FINNOQ_API.Notification';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.Notification.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.Notification.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.Notification} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.Notification.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      type: (f = msg.getType()) && proto.FINNOQ_API.NotificationType.toObject(includeInstance, f),
      text: jspb.Message.getFieldWithDefault(msg, 3, ""),
      pollId: jspb.Message.getFieldWithDefault(msg, 4, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.Notification}
 */
proto.FINNOQ_API.Notification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.Notification;
  return proto.FINNOQ_API.Notification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.Notification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.Notification}
 */
proto.FINNOQ_API.Notification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = new proto.FINNOQ_API.NotificationType;
        reader.readMessage(value,proto.FINNOQ_API.NotificationType.deserializeBinaryFromReader);
        msg.setType(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setText(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPollId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.Notification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.Notification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.Notification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.Notification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.FINNOQ_API.NotificationType.serializeBinaryToWriter
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPollId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.Notification.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Notification.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional NotificationType type = 2;
 * @return {?proto.FINNOQ_API.NotificationType}
 */
proto.FINNOQ_API.Notification.prototype.getType = function() {
  return /** @type{?proto.FINNOQ_API.NotificationType} */ (
    jspb.Message.getWrapperField(this, proto.FINNOQ_API.NotificationType, 2));
};


/** @param {?proto.FINNOQ_API.NotificationType|undefined} value */
proto.FINNOQ_API.Notification.prototype.setType = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.FINNOQ_API.Notification.prototype.clearType = function() {
  this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.Notification.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string text = 3;
 * @return {string}
 */
proto.FINNOQ_API.Notification.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Notification.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 poll_id = 4;
 * @return {number}
 */
proto.FINNOQ_API.Notification.prototype.getPollId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Notification.prototype.setPollId = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.NotificationList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.NotificationList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.NotificationList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.NotificationList.displayName = 'proto.FINNOQ_API.NotificationList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.NotificationList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.NotificationList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.NotificationList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.NotificationList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.NotificationList.toObject = function(includeInstance, msg) {
    var f, obj = {
      notificationsList: jspb.Message.toObjectList(msg.getNotificationsList(),
        proto.FINNOQ_API.Notification.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.NotificationList}
 */
proto.FINNOQ_API.NotificationList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.NotificationList;
  return proto.FINNOQ_API.NotificationList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.NotificationList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.NotificationList}
 */
proto.FINNOQ_API.NotificationList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.Notification;
        reader.readMessage(value,proto.FINNOQ_API.Notification.deserializeBinaryFromReader);
        msg.addNotifications(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.NotificationList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.NotificationList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.NotificationList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.NotificationList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotificationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.Notification.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Notification notifications = 1;
 * @return {!Array<!proto.FINNOQ_API.Notification>}
 */
proto.FINNOQ_API.NotificationList.prototype.getNotificationsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Notification>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Notification, 1));
};


/** @param {!Array<!proto.FINNOQ_API.Notification>} value */
proto.FINNOQ_API.NotificationList.prototype.setNotificationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.Notification=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Notification}
 */
proto.FINNOQ_API.NotificationList.prototype.addNotifications = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.Notification, opt_index);
};


proto.FINNOQ_API.NotificationList.prototype.clearNotificationsList = function() {
  this.setNotificationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.NotificationSetting = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.NotificationSetting, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.NotificationSetting.displayName = 'proto.FINNOQ_API.NotificationSetting';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.NotificationSetting.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.NotificationSetting.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.NotificationSetting} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.NotificationSetting.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      isEnabled: jspb.Message.getFieldWithDefault(msg, 2, false),
      notificationTypeId: jspb.Message.getFieldWithDefault(msg, 3, 0),
      userId: jspb.Message.getFieldWithDefault(msg, 4, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.NotificationSetting}
 */
proto.FINNOQ_API.NotificationSetting.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.NotificationSetting;
  return proto.FINNOQ_API.NotificationSetting.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.NotificationSetting} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.NotificationSetting}
 */
proto.FINNOQ_API.NotificationSetting.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsEnabled(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setNotificationTypeId(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUserId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.NotificationSetting.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.NotificationSetting.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.NotificationSetting} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.NotificationSetting.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getIsEnabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getNotificationTypeId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.NotificationSetting.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.NotificationSetting.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool is_enabled = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.FINNOQ_API.NotificationSetting.prototype.getIsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.FINNOQ_API.NotificationSetting.prototype.setIsEnabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 notification_type_id = 3;
 * @return {number}
 */
proto.FINNOQ_API.NotificationSetting.prototype.getNotificationTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.FINNOQ_API.NotificationSetting.prototype.setNotificationTypeId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 user_id = 4;
 * @return {number}
 */
proto.FINNOQ_API.NotificationSetting.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.FINNOQ_API.NotificationSetting.prototype.setUserId = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.NotificationSettingList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.NotificationSettingList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.NotificationSettingList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.NotificationSettingList.displayName = 'proto.FINNOQ_API.NotificationSettingList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.NotificationSettingList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.NotificationSettingList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.NotificationSettingList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.NotificationSettingList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.NotificationSettingList.toObject = function(includeInstance, msg) {
    var f, obj = {
      notificationSettingsList: jspb.Message.toObjectList(msg.getNotificationSettingsList(),
        proto.FINNOQ_API.NotificationSetting.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.NotificationSettingList}
 */
proto.FINNOQ_API.NotificationSettingList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.NotificationSettingList;
  return proto.FINNOQ_API.NotificationSettingList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.NotificationSettingList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.NotificationSettingList}
 */
proto.FINNOQ_API.NotificationSettingList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.NotificationSetting;
        reader.readMessage(value,proto.FINNOQ_API.NotificationSetting.deserializeBinaryFromReader);
        msg.addNotificationSettings(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.NotificationSettingList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.NotificationSettingList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.NotificationSettingList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.NotificationSettingList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotificationSettingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.NotificationSetting.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NotificationSetting notification_settings = 1;
 * @return {!Array<!proto.FINNOQ_API.NotificationSetting>}
 */
proto.FINNOQ_API.NotificationSettingList.prototype.getNotificationSettingsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.NotificationSetting>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.NotificationSetting, 1));
};


/** @param {!Array<!proto.FINNOQ_API.NotificationSetting>} value */
proto.FINNOQ_API.NotificationSettingList.prototype.setNotificationSettingsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.NotificationSetting=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.NotificationSetting}
 */
proto.FINNOQ_API.NotificationSettingList.prototype.addNotificationSettings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.NotificationSetting, opt_index);
};


proto.FINNOQ_API.NotificationSettingList.prototype.clearNotificationSettingsList = function() {
  this.setNotificationSettingsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.ViewedNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.ViewedNotification.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.ViewedNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.ViewedNotification.displayName = 'proto.FINNOQ_API.ViewedNotification';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.ViewedNotification.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.ViewedNotification.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.ViewedNotification.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.ViewedNotification} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.ViewedNotification.toObject = function(includeInstance, msg) {
    var f, obj = {
      accessToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
      notificationsList: jspb.Message.toObjectList(msg.getNotificationsList(),
        proto.FINNOQ_API.Notification.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.ViewedNotification}
 */
proto.FINNOQ_API.ViewedNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.ViewedNotification;
  return proto.FINNOQ_API.ViewedNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.ViewedNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.ViewedNotification}
 */
proto.FINNOQ_API.ViewedNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccessToken(value);
        break;
      case 2:
        var value = new proto.FINNOQ_API.Notification;
        reader.readMessage(value,proto.FINNOQ_API.Notification.deserializeBinaryFromReader);
        msg.addNotifications(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.ViewedNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.ViewedNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.ViewedNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.ViewedNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNotificationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.FINNOQ_API.Notification.serializeBinaryToWriter
    );
  }
};


/**
 * optional string access_token = 1;
 * @return {string}
 */
proto.FINNOQ_API.ViewedNotification.prototype.getAccessToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.FINNOQ_API.ViewedNotification.prototype.setAccessToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Notification notifications = 2;
 * @return {!Array<!proto.FINNOQ_API.Notification>}
 */
proto.FINNOQ_API.ViewedNotification.prototype.getNotificationsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Notification>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Notification, 2));
};


/** @param {!Array<!proto.FINNOQ_API.Notification>} value */
proto.FINNOQ_API.ViewedNotification.prototype.setNotificationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.FINNOQ_API.Notification=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Notification}
 */
proto.FINNOQ_API.ViewedNotification.prototype.addNotifications = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.FINNOQ_API.Notification, opt_index);
};


proto.FINNOQ_API.ViewedNotification.prototype.clearNotificationsList = function() {
  this.setNotificationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.User.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.User.displayName = 'proto.FINNOQ_API.User';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.User.repeatedFields_ = [11,33,34];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.User.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.User.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.User} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.User.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      firstName: jspb.Message.getFieldWithDefault(msg, 2, ""),
      lastName: jspb.Message.getFieldWithDefault(msg, 3, ""),
      email: jspb.Message.getFieldWithDefault(msg, 4, ""),
      emailConfirmed: jspb.Message.getFieldWithDefault(msg, 5, false),
      password: jspb.Message.getFieldWithDefault(msg, 6, ""),
      birthDate: (f = msg.getBirthDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
      gender: jspb.Message.getFieldWithDefault(msg, 8, 0),
      phoneCountryCode: jspb.Message.getFieldWithDefault(msg, 9, ""),
      phone: jspb.Message.getFieldWithDefault(msg, 10, ""),
      professionsList: jspb.Message.toObjectList(msg.getProfessionsList(),
        proto.FINNOQ_API.Profession.toObject, includeInstance),
      residenceCountry: (f = msg.getResidenceCountry()) && proto.FINNOQ_API.Country.toObject(includeInstance, f),
      groupOfAge: jspb.Message.getFieldWithDefault(msg, 13, 0),
      acceptTerms: jspb.Message.getFieldWithDefault(msg, 14, false),
      acceptNl: jspb.Message.getFieldWithDefault(msg, 15, false),
      hasPermission: jspb.Message.getFieldWithDefault(msg, 16, false),
      credits: +jspb.Message.getFieldWithDefault(msg, 17, 0.0),
      createdDate: (f = msg.getCreatedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
      nationality: (f = msg.getNationality()) && proto.FINNOQ_API.Country.toObject(includeInstance, f),
      facebook: jspb.Message.getFieldWithDefault(msg, 20, ""),
      telegram: jspb.Message.getFieldWithDefault(msg, 21, ""),
      reddit: jspb.Message.getFieldWithDefault(msg, 22, ""),
      twitter: jspb.Message.getFieldWithDefault(msg, 23, ""),
      eth: jspb.Message.getFieldWithDefault(msg, 24, ""),
      ethTestnet: jspb.Message.getFieldWithDefault(msg, 25, ""),
      identicon: jspb.Message.getFieldWithDefault(msg, 26, ""),
      referralLink: jspb.Message.getFieldWithDefault(msg, 27, ""),
      referralToken: jspb.Message.getFieldWithDefault(msg, 28, ""),
      referralCredits: +jspb.Message.getFieldWithDefault(msg, 29, 0.0),
      bountyCredits: +jspb.Message.getFieldWithDefault(msg, 30, 0.0),
      askPermission: jspb.Message.getFieldWithDefault(msg, 31, false),
      campaign: jspb.Message.getFieldWithDefault(msg, 32, ""),
      notificationsList: jspb.Message.toObjectList(msg.getNotificationsList(),
        proto.FINNOQ_API.Notification.toObject, includeInstance),
      notificationSettingsList: jspb.Message.toObjectList(msg.getNotificationSettingsList(),
        proto.FINNOQ_API.NotificationSetting.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.User}
 */
proto.FINNOQ_API.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.User;
  return proto.FINNOQ_API.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.User}
 */
proto.FINNOQ_API.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setFirstName(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setLastName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setEmail(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setEmailConfirmed(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setPassword(value);
        break;
      case 7:
        var value = new google_protobuf_timestamp_pb.Timestamp;
        reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
        msg.setBirthDate(value);
        break;
      case 8:
        var value = /** @type {!proto.FINNOQ_API.User.Gender} */ (reader.readEnum());
        msg.setGender(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setPhoneCountryCode(value);
        break;
      case 10:
        var value = /** @type {string} */ (reader.readString());
        msg.setPhone(value);
        break;
      case 11:
        var value = new proto.FINNOQ_API.Profession;
        reader.readMessage(value,proto.FINNOQ_API.Profession.deserializeBinaryFromReader);
        msg.addProfessions(value);
        break;
      case 12:
        var value = new proto.FINNOQ_API.Country;
        reader.readMessage(value,proto.FINNOQ_API.Country.deserializeBinaryFromReader);
        msg.setResidenceCountry(value);
        break;
      case 13:
        var value = /** @type {!proto.FINNOQ_API.User.GroupOfAge} */ (reader.readEnum());
        msg.setGroupOfAge(value);
        break;
      case 14:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setAcceptTerms(value);
        break;
      case 15:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setAcceptNl(value);
        break;
      case 16:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setHasPermission(value);
        break;
      case 17:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCredits(value);
        break;
      case 18:
        var value = new google_protobuf_timestamp_pb.Timestamp;
        reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
        msg.setCreatedDate(value);
        break;
      case 19:
        var value = new proto.FINNOQ_API.Country;
        reader.readMessage(value,proto.FINNOQ_API.Country.deserializeBinaryFromReader);
        msg.setNationality(value);
        break;
      case 20:
        var value = /** @type {string} */ (reader.readString());
        msg.setFacebook(value);
        break;
      case 21:
        var value = /** @type {string} */ (reader.readString());
        msg.setTelegram(value);
        break;
      case 22:
        var value = /** @type {string} */ (reader.readString());
        msg.setReddit(value);
        break;
      case 23:
        var value = /** @type {string} */ (reader.readString());
        msg.setTwitter(value);
        break;
      case 24:
        var value = /** @type {string} */ (reader.readString());
        msg.setEth(value);
        break;
      case 25:
        var value = /** @type {string} */ (reader.readString());
        msg.setEthTestnet(value);
        break;
      case 26:
        var value = /** @type {string} */ (reader.readString());
        msg.setIdenticon(value);
        break;
      case 27:
        var value = /** @type {string} */ (reader.readString());
        msg.setReferralLink(value);
        break;
      case 28:
        var value = /** @type {string} */ (reader.readString());
        msg.setReferralToken(value);
        break;
      case 29:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setReferralCredits(value);
        break;
      case 30:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setBountyCredits(value);
        break;
      case 31:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setAskPermission(value);
        break;
      case 32:
        var value = /** @type {string} */ (reader.readString());
        msg.setCampaign(value);
        break;
      case 33:
        var value = new proto.FINNOQ_API.Notification;
        reader.readMessage(value,proto.FINNOQ_API.Notification.deserializeBinaryFromReader);
        msg.addNotifications(value);
        break;
      case 34:
        var value = new proto.FINNOQ_API.NotificationSetting;
        reader.readMessage(value,proto.FINNOQ_API.NotificationSetting.deserializeBinaryFromReader);
        msg.addNotificationSettings(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmailConfirmed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBirthDate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getGender();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getPhoneCountryCode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getProfessionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.FINNOQ_API.Profession.serializeBinaryToWriter
    );
  }
  f = message.getResidenceCountry();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.FINNOQ_API.Country.serializeBinaryToWriter
    );
  }
  f = message.getGroupOfAge();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getAcceptTerms();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getAcceptNl();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getHasPermission();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getCredits();
  if (f !== 0.0) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = message.getCreatedDate();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNationality();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.FINNOQ_API.Country.serializeBinaryToWriter
    );
  }
  f = message.getFacebook();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getTelegram();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getReddit();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getTwitter();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getEth();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getEthTestnet();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getIdenticon();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getReferralLink();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getReferralToken();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getReferralCredits();
  if (f !== 0.0) {
    writer.writeDouble(
      29,
      f
    );
  }
  f = message.getBountyCredits();
  if (f !== 0.0) {
    writer.writeDouble(
      30,
      f
    );
  }
  f = message.getAskPermission();
  if (f) {
    writer.writeBool(
      31,
      f
    );
  }
  f = message.getCampaign();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getNotificationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      33,
      f,
      proto.FINNOQ_API.Notification.serializeBinaryToWriter
    );
  }
  f = message.getNotificationSettingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      34,
      f,
      proto.FINNOQ_API.NotificationSetting.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.FINNOQ_API.User.Gender = {
  UNDEFINED_GENDER: 0,
  MALE: 1,
  FEMALE: 2,
  NON_BINARY: 3,
  NOT_SPECIFIED: 4
};

/**
 * @enum {number}
 */
proto.FINNOQ_API.User.GroupOfAge = {
  UNDEFINED_GROUP_OF_AGE: 0,
  GROUP_18_24: 1,
  GROUP_25_34: 2,
  GROUP_35_44: 3,
  GROUP_45_54: 4,
  GROUP_55_64: 5,
  GROUP_65: 6
};

/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.User.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.User.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string first_name = 2;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setFirstName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string last_name = 3;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setLastName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool email_confirmed = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.FINNOQ_API.User.prototype.getEmailConfirmed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.FINNOQ_API.User.prototype.setEmailConfirmed = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string password = 6;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp birth_date = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.FINNOQ_API.User.prototype.getBirthDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.FINNOQ_API.User.prototype.setBirthDate = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.FINNOQ_API.User.prototype.clearBirthDate = function() {
  this.setBirthDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.User.prototype.hasBirthDate = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Gender gender = 8;
 * @return {!proto.FINNOQ_API.User.Gender}
 */
proto.FINNOQ_API.User.prototype.getGender = function() {
  return /** @type {!proto.FINNOQ_API.User.Gender} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.FINNOQ_API.User.Gender} value */
proto.FINNOQ_API.User.prototype.setGender = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string phone_country_code = 9;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getPhoneCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setPhoneCountryCode = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string phone = 10;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setPhone = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated Profession professions = 11;
 * @return {!Array<!proto.FINNOQ_API.Profession>}
 */
proto.FINNOQ_API.User.prototype.getProfessionsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Profession>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Profession, 11));
};


/** @param {!Array<!proto.FINNOQ_API.Profession>} value */
proto.FINNOQ_API.User.prototype.setProfessionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.FINNOQ_API.Profession=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Profession}
 */
proto.FINNOQ_API.User.prototype.addProfessions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.FINNOQ_API.Profession, opt_index);
};


proto.FINNOQ_API.User.prototype.clearProfessionsList = function() {
  this.setProfessionsList([]);
};


/**
 * optional Country residence_country = 12;
 * @return {?proto.FINNOQ_API.Country}
 */
proto.FINNOQ_API.User.prototype.getResidenceCountry = function() {
  return /** @type{?proto.FINNOQ_API.Country} */ (
    jspb.Message.getWrapperField(this, proto.FINNOQ_API.Country, 12));
};


/** @param {?proto.FINNOQ_API.Country|undefined} value */
proto.FINNOQ_API.User.prototype.setResidenceCountry = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.FINNOQ_API.User.prototype.clearResidenceCountry = function() {
  this.setResidenceCountry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.User.prototype.hasResidenceCountry = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional GroupOfAge group_of_age = 13;
 * @return {!proto.FINNOQ_API.User.GroupOfAge}
 */
proto.FINNOQ_API.User.prototype.getGroupOfAge = function() {
  return /** @type {!proto.FINNOQ_API.User.GroupOfAge} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {!proto.FINNOQ_API.User.GroupOfAge} value */
proto.FINNOQ_API.User.prototype.setGroupOfAge = function(value) {
  jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional bool accept_terms = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.FINNOQ_API.User.prototype.getAcceptTerms = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.FINNOQ_API.User.prototype.setAcceptTerms = function(value) {
  jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool accept_nl = 15;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.FINNOQ_API.User.prototype.getAcceptNl = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.FINNOQ_API.User.prototype.setAcceptNl = function(value) {
  jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool has_permission = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.FINNOQ_API.User.prototype.getHasPermission = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.FINNOQ_API.User.prototype.setHasPermission = function(value) {
  jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional double credits = 17;
 * @return {number}
 */
proto.FINNOQ_API.User.prototype.getCredits = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.FINNOQ_API.User.prototype.setCredits = function(value) {
  jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional google.protobuf.Timestamp created_date = 18;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.FINNOQ_API.User.prototype.getCreatedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 18));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.FINNOQ_API.User.prototype.setCreatedDate = function(value) {
  jspb.Message.setWrapperField(this, 18, value);
};


proto.FINNOQ_API.User.prototype.clearCreatedDate = function() {
  this.setCreatedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.User.prototype.hasCreatedDate = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Country nationality = 19;
 * @return {?proto.FINNOQ_API.Country}
 */
proto.FINNOQ_API.User.prototype.getNationality = function() {
  return /** @type{?proto.FINNOQ_API.Country} */ (
    jspb.Message.getWrapperField(this, proto.FINNOQ_API.Country, 19));
};


/** @param {?proto.FINNOQ_API.Country|undefined} value */
proto.FINNOQ_API.User.prototype.setNationality = function(value) {
  jspb.Message.setWrapperField(this, 19, value);
};


proto.FINNOQ_API.User.prototype.clearNationality = function() {
  this.setNationality(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.User.prototype.hasNationality = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string facebook = 20;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getFacebook = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setFacebook = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string telegram = 21;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getTelegram = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setTelegram = function(value) {
  jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string reddit = 22;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getReddit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setReddit = function(value) {
  jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string twitter = 23;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getTwitter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setTwitter = function(value) {
  jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string eth = 24;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getEth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setEth = function(value) {
  jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string eth_testnet = 25;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getEthTestnet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setEthTestnet = function(value) {
  jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string identicon = 26;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getIdenticon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setIdenticon = function(value) {
  jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string referral_link = 27;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getReferralLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setReferralLink = function(value) {
  jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string referral_token = 28;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getReferralToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setReferralToken = function(value) {
  jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional double referral_credits = 29;
 * @return {number}
 */
proto.FINNOQ_API.User.prototype.getReferralCredits = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 29, 0.0));
};


/** @param {number} value */
proto.FINNOQ_API.User.prototype.setReferralCredits = function(value) {
  jspb.Message.setProto3FloatField(this, 29, value);
};


/**
 * optional double bounty_credits = 30;
 * @return {number}
 */
proto.FINNOQ_API.User.prototype.getBountyCredits = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 30, 0.0));
};


/** @param {number} value */
proto.FINNOQ_API.User.prototype.setBountyCredits = function(value) {
  jspb.Message.setProto3FloatField(this, 30, value);
};


/**
 * optional bool ask_permission = 31;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.FINNOQ_API.User.prototype.getAskPermission = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 31, false));
};


/** @param {boolean} value */
proto.FINNOQ_API.User.prototype.setAskPermission = function(value) {
  jspb.Message.setProto3BooleanField(this, 31, value);
};


/**
 * optional string campaign = 32;
 * @return {string}
 */
proto.FINNOQ_API.User.prototype.getCampaign = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/** @param {string} value */
proto.FINNOQ_API.User.prototype.setCampaign = function(value) {
  jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * repeated Notification notifications = 33;
 * @return {!Array<!proto.FINNOQ_API.Notification>}
 */
proto.FINNOQ_API.User.prototype.getNotificationsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Notification>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Notification, 33));
};


/** @param {!Array<!proto.FINNOQ_API.Notification>} value */
proto.FINNOQ_API.User.prototype.setNotificationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 33, value);
};


/**
 * @param {!proto.FINNOQ_API.Notification=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Notification}
 */
proto.FINNOQ_API.User.prototype.addNotifications = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 33, opt_value, proto.FINNOQ_API.Notification, opt_index);
};


proto.FINNOQ_API.User.prototype.clearNotificationsList = function() {
  this.setNotificationsList([]);
};


/**
 * repeated NotificationSetting notification_settings = 34;
 * @return {!Array<!proto.FINNOQ_API.NotificationSetting>}
 */
proto.FINNOQ_API.User.prototype.getNotificationSettingsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.NotificationSetting>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.NotificationSetting, 34));
};


/** @param {!Array<!proto.FINNOQ_API.NotificationSetting>} value */
proto.FINNOQ_API.User.prototype.setNotificationSettingsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 34, value);
};


/**
 * @param {!proto.FINNOQ_API.NotificationSetting=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.NotificationSetting}
 */
proto.FINNOQ_API.User.prototype.addNotificationSettings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 34, opt_value, proto.FINNOQ_API.NotificationSetting, opt_index);
};


proto.FINNOQ_API.User.prototype.clearNotificationSettingsList = function() {
  this.setNotificationSettingsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.UserList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.UserList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.UserList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.UserList.displayName = 'proto.FINNOQ_API.UserList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.UserList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.UserList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.UserList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.UserList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.UserList.toObject = function(includeInstance, msg) {
    var f, obj = {
      usersList: jspb.Message.toObjectList(msg.getUsersList(),
        proto.FINNOQ_API.User.toObject, includeInstance),
      numberOfUsers: jspb.Message.getFieldWithDefault(msg, 2, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.UserList}
 */
proto.FINNOQ_API.UserList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.UserList;
  return proto.FINNOQ_API.UserList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.UserList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.UserList}
 */
proto.FINNOQ_API.UserList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.User;
        reader.readMessage(value,proto.FINNOQ_API.User.deserializeBinaryFromReader);
        msg.addUsers(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setNumberOfUsers(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.UserList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.UserList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.UserList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.UserList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.User.serializeBinaryToWriter
    );
  }
  f = message.getNumberOfUsers();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated User users = 1;
 * @return {!Array<!proto.FINNOQ_API.User>}
 */
proto.FINNOQ_API.UserList.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.User, 1));
};


/** @param {!Array<!proto.FINNOQ_API.User>} value */
proto.FINNOQ_API.UserList.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.User}
 */
proto.FINNOQ_API.UserList.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.User, opt_index);
};


proto.FINNOQ_API.UserList.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * optional int32 number_of_users = 2;
 * @return {number}
 */
proto.FINNOQ_API.UserList.prototype.getNumberOfUsers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.FINNOQ_API.UserList.prototype.setNumberOfUsers = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.SocialAuthRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.SocialAuthRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.SocialAuthRequest.displayName = 'proto.FINNOQ_API.SocialAuthRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.SocialAuthRequest.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.SocialAuthRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.SocialAuthRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.SocialAuthRequest.toObject = function(includeInstance, msg) {
    var f, obj = {
      token: jspb.Message.getFieldWithDefault(msg, 1, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.SocialAuthRequest}
 */
proto.FINNOQ_API.SocialAuthRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.SocialAuthRequest;
  return proto.FINNOQ_API.SocialAuthRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.SocialAuthRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.SocialAuthRequest}
 */
proto.FINNOQ_API.SocialAuthRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setToken(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.SocialAuthRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.SocialAuthRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.SocialAuthRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.SocialAuthRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.FINNOQ_API.SocialAuthRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.FINNOQ_API.SocialAuthRequest.prototype.setToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.SocialAuthResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.SocialAuthResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.SocialAuthResponse.displayName = 'proto.FINNOQ_API.SocialAuthResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.SocialAuthResponse.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.SocialAuthResponse.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.SocialAuthResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.SocialAuthResponse.toObject = function(includeInstance, msg) {
    var f, obj = {
      authResponse: (f = msg.getAuthResponse()) && proto.FINNOQ_API.AuthResponse.toObject(includeInstance, f),
      user: (f = msg.getUser()) && proto.FINNOQ_API.User.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.SocialAuthResponse}
 */
proto.FINNOQ_API.SocialAuthResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.SocialAuthResponse;
  return proto.FINNOQ_API.SocialAuthResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.SocialAuthResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.SocialAuthResponse}
 */
proto.FINNOQ_API.SocialAuthResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.AuthResponse;
        reader.readMessage(value,proto.FINNOQ_API.AuthResponse.deserializeBinaryFromReader);
        msg.setAuthResponse(value);
        break;
      case 2:
        var value = new proto.FINNOQ_API.User;
        reader.readMessage(value,proto.FINNOQ_API.User.deserializeBinaryFromReader);
        msg.setUser(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.SocialAuthResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.SocialAuthResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.SocialAuthResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.SocialAuthResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthResponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.FINNOQ_API.AuthResponse.serializeBinaryToWriter
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.FINNOQ_API.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthResponse auth_response = 1;
 * @return {?proto.FINNOQ_API.AuthResponse}
 */
proto.FINNOQ_API.SocialAuthResponse.prototype.getAuthResponse = function() {
  return /** @type{?proto.FINNOQ_API.AuthResponse} */ (
    jspb.Message.getWrapperField(this, proto.FINNOQ_API.AuthResponse, 1));
};


/** @param {?proto.FINNOQ_API.AuthResponse|undefined} value */
proto.FINNOQ_API.SocialAuthResponse.prototype.setAuthResponse = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.FINNOQ_API.SocialAuthResponse.prototype.clearAuthResponse = function() {
  this.setAuthResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.SocialAuthResponse.prototype.hasAuthResponse = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional User user = 2;
 * @return {?proto.FINNOQ_API.User}
 */
proto.FINNOQ_API.SocialAuthResponse.prototype.getUser = function() {
  return /** @type{?proto.FINNOQ_API.User} */ (
    jspb.Message.getWrapperField(this, proto.FINNOQ_API.User, 2));
};


/** @param {?proto.FINNOQ_API.User|undefined} value */
proto.FINNOQ_API.SocialAuthResponse.prototype.setUser = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.FINNOQ_API.SocialAuthResponse.prototype.clearUser = function() {
  this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.SocialAuthResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.Poll = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.Poll.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.Poll, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.Poll.displayName = 'proto.FINNOQ_API.Poll';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.Poll.repeatedFields_ = [26,27];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.Poll.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.Poll.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.Poll} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.Poll.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      userId: jspb.Message.getFieldWithDefault(msg, 2, 0),
      txId: jspb.Message.getFieldWithDefault(msg, 3, ""),
      title: jspb.Message.getFieldWithDefault(msg, 4, ""),
      description: jspb.Message.getFieldWithDefault(msg, 5, ""),
      createdDate: (f = msg.getCreatedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
      openingDate: (f = msg.getOpeningDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
      closingDate: (f = msg.getClosingDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
      isPublished: jspb.Message.getFieldWithDefault(msg, 9, 0),
      minNumOfParticipants: jspb.Message.getFieldWithDefault(msg, 10, 0),
      maxNumOfParticipants: jspb.Message.getFieldWithDefault(msg, 11, 0),
      numberOfQuestions: jspb.Message.getFieldWithDefault(msg, 12, 0),
      totalVotes: jspb.Message.getFieldWithDefault(msg, 13, 0),
      credits: +jspb.Message.getFieldWithDefault(msg, 14, 0.0),
      media: jspb.Message.getFieldWithDefault(msg, 15, ""),
      calendarLink: jspb.Message.getFieldWithDefault(msg, 16, ""),
      isFavorited: jspb.Message.getFieldWithDefault(msg, 17, false),
      numberOfFavorites: jspb.Message.getFieldWithDefault(msg, 18, 0),
      isLiked: jspb.Message.getFieldWithDefault(msg, 19, false),
      numberOfLikes: jspb.Message.getFieldWithDefault(msg, 20, 0),
      isParticipated: jspb.Message.getFieldWithDefault(msg, 21, false),
      voteTxId: jspb.Message.getFieldWithDefault(msg, 22, ""),
      questionTitle: jspb.Message.getFieldWithDefault(msg, 23, ""),
      isAccepted: jspb.Message.getFieldWithDefault(msg, 24, false),
      isReviewed: jspb.Message.getFieldWithDefault(msg, 25, false),
      categoriesList: jspb.Message.toObjectList(msg.getCategoriesList(),
        proto.FINNOQ_API.Category.toObject, includeInstance),
      questionsList: jspb.Message.toObjectList(msg.getQuestionsList(),
        proto.FINNOQ_API.Question.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.Poll}
 */
proto.FINNOQ_API.Poll.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.Poll;
  return proto.FINNOQ_API.Poll.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.Poll} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.Poll}
 */
proto.FINNOQ_API.Poll.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUserId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setTxId(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 6:
        var value = new google_protobuf_timestamp_pb.Timestamp;
        reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
        msg.setCreatedDate(value);
        break;
      case 7:
        var value = new google_protobuf_timestamp_pb.Timestamp;
        reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
        msg.setOpeningDate(value);
        break;
      case 8:
        var value = new google_protobuf_timestamp_pb.Timestamp;
        reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
        msg.setClosingDate(value);
        break;
      case 9:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setIsPublished(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setMinNumOfParticipants(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setMaxNumOfParticipants(value);
        break;
      case 12:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setNumberOfQuestions(value);
        break;
      case 13:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setTotalVotes(value);
        break;
      case 14:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCredits(value);
        break;
      case 15:
        var value = /** @type {string} */ (reader.readString());
        msg.setMedia(value);
        break;
      case 16:
        var value = /** @type {string} */ (reader.readString());
        msg.setCalendarLink(value);
        break;
      case 17:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsFavorited(value);
        break;
      case 18:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setNumberOfFavorites(value);
        break;
      case 19:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsLiked(value);
        break;
      case 20:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setNumberOfLikes(value);
        break;
      case 21:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsParticipated(value);
        break;
      case 22:
        var value = /** @type {string} */ (reader.readString());
        msg.setVoteTxId(value);
        break;
      case 23:
        var value = /** @type {string} */ (reader.readString());
        msg.setQuestionTitle(value);
        break;
      case 24:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsAccepted(value);
        break;
      case 25:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsReviewed(value);
        break;
      case 26:
        var value = new proto.FINNOQ_API.Category;
        reader.readMessage(value,proto.FINNOQ_API.Category.deserializeBinaryFromReader);
        msg.addCategories(value);
        break;
      case 27:
        var value = new proto.FINNOQ_API.Question;
        reader.readMessage(value,proto.FINNOQ_API.Question.deserializeBinaryFromReader);
        msg.addQuestions(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.Poll.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.Poll.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.Poll} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.Poll.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTxId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedDate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOpeningDate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getClosingDate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIsPublished();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getMinNumOfParticipants();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getMaxNumOfParticipants();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getNumberOfQuestions();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getTotalVotes();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getCredits();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getMedia();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCalendarLink();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getIsFavorited();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getNumberOfFavorites();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getIsLiked();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getNumberOfLikes();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getIsParticipated();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getVoteTxId();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getQuestionTitle();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getIsAccepted();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getIsReviewed();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      26,
      f,
      proto.FINNOQ_API.Category.serializeBinaryToWriter
    );
  }
  f = message.getQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      27,
      f,
      proto.FINNOQ_API.Question.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.Poll.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Poll.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 user_id = 2;
 * @return {number}
 */
proto.FINNOQ_API.Poll.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Poll.prototype.setUserId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string tx_id = 3;
 * @return {string}
 */
proto.FINNOQ_API.Poll.prototype.getTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Poll.prototype.setTxId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.FINNOQ_API.Poll.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Poll.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.FINNOQ_API.Poll.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Poll.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp created_date = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.FINNOQ_API.Poll.prototype.getCreatedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.FINNOQ_API.Poll.prototype.setCreatedDate = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.FINNOQ_API.Poll.prototype.clearCreatedDate = function() {
  this.setCreatedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.Poll.prototype.hasCreatedDate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp opening_date = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.FINNOQ_API.Poll.prototype.getOpeningDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.FINNOQ_API.Poll.prototype.setOpeningDate = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.FINNOQ_API.Poll.prototype.clearOpeningDate = function() {
  this.setOpeningDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.Poll.prototype.hasOpeningDate = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp closing_date = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.FINNOQ_API.Poll.prototype.getClosingDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.FINNOQ_API.Poll.prototype.setClosingDate = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.FINNOQ_API.Poll.prototype.clearClosingDate = function() {
  this.setClosingDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.Poll.prototype.hasClosingDate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 is_published = 9;
 * @return {number}
 */
proto.FINNOQ_API.Poll.prototype.getIsPublished = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Poll.prototype.setIsPublished = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 min_num_of_participants = 10;
 * @return {number}
 */
proto.FINNOQ_API.Poll.prototype.getMinNumOfParticipants = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Poll.prototype.setMinNumOfParticipants = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 max_num_of_participants = 11;
 * @return {number}
 */
proto.FINNOQ_API.Poll.prototype.getMaxNumOfParticipants = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Poll.prototype.setMaxNumOfParticipants = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 number_of_questions = 12;
 * @return {number}
 */
proto.FINNOQ_API.Poll.prototype.getNumberOfQuestions = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Poll.prototype.setNumberOfQuestions = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 total_votes = 13;
 * @return {number}
 */
proto.FINNOQ_API.Poll.prototype.getTotalVotes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Poll.prototype.setTotalVotes = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional double credits = 14;
 * @return {number}
 */
proto.FINNOQ_API.Poll.prototype.getCredits = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 14, 0.0));
};


/** @param {number} value */
proto.FINNOQ_API.Poll.prototype.setCredits = function(value) {
  jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional string media = 15;
 * @return {string}
 */
proto.FINNOQ_API.Poll.prototype.getMedia = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Poll.prototype.setMedia = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string calendar_link = 16;
 * @return {string}
 */
proto.FINNOQ_API.Poll.prototype.getCalendarLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Poll.prototype.setCalendarLink = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional bool is_favorited = 17;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.FINNOQ_API.Poll.prototype.getIsFavorited = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.FINNOQ_API.Poll.prototype.setIsFavorited = function(value) {
  jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional int32 number_of_favorites = 18;
 * @return {number}
 */
proto.FINNOQ_API.Poll.prototype.getNumberOfFavorites = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Poll.prototype.setNumberOfFavorites = function(value) {
  jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional bool is_liked = 19;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.FINNOQ_API.Poll.prototype.getIsLiked = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.FINNOQ_API.Poll.prototype.setIsLiked = function(value) {
  jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional int32 number_of_likes = 20;
 * @return {number}
 */
proto.FINNOQ_API.Poll.prototype.getNumberOfLikes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Poll.prototype.setNumberOfLikes = function(value) {
  jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional bool is_participated = 21;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.FINNOQ_API.Poll.prototype.getIsParticipated = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 21, false));
};


/** @param {boolean} value */
proto.FINNOQ_API.Poll.prototype.setIsParticipated = function(value) {
  jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional string vote_tx_id = 22;
 * @return {string}
 */
proto.FINNOQ_API.Poll.prototype.getVoteTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Poll.prototype.setVoteTxId = function(value) {
  jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string question_title = 23;
 * @return {string}
 */
proto.FINNOQ_API.Poll.prototype.getQuestionTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Poll.prototype.setQuestionTitle = function(value) {
  jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional bool is_accepted = 24;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.FINNOQ_API.Poll.prototype.getIsAccepted = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 24, false));
};


/** @param {boolean} value */
proto.FINNOQ_API.Poll.prototype.setIsAccepted = function(value) {
  jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional bool is_reviewed = 25;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.FINNOQ_API.Poll.prototype.getIsReviewed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 25, false));
};


/** @param {boolean} value */
proto.FINNOQ_API.Poll.prototype.setIsReviewed = function(value) {
  jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * repeated Category categories = 26;
 * @return {!Array<!proto.FINNOQ_API.Category>}
 */
proto.FINNOQ_API.Poll.prototype.getCategoriesList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Category, 26));
};


/** @param {!Array<!proto.FINNOQ_API.Category>} value */
proto.FINNOQ_API.Poll.prototype.setCategoriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 26, value);
};


/**
 * @param {!proto.FINNOQ_API.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Category}
 */
proto.FINNOQ_API.Poll.prototype.addCategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 26, opt_value, proto.FINNOQ_API.Category, opt_index);
};


proto.FINNOQ_API.Poll.prototype.clearCategoriesList = function() {
  this.setCategoriesList([]);
};


/**
 * repeated Question questions = 27;
 * @return {!Array<!proto.FINNOQ_API.Question>}
 */
proto.FINNOQ_API.Poll.prototype.getQuestionsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Question>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Question, 27));
};


/** @param {!Array<!proto.FINNOQ_API.Question>} value */
proto.FINNOQ_API.Poll.prototype.setQuestionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 27, value);
};


/**
 * @param {!proto.FINNOQ_API.Question=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Question}
 */
proto.FINNOQ_API.Poll.prototype.addQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 27, opt_value, proto.FINNOQ_API.Question, opt_index);
};


proto.FINNOQ_API.Poll.prototype.clearQuestionsList = function() {
  this.setQuestionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.PollList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.PollList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.PollList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.PollList.displayName = 'proto.FINNOQ_API.PollList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.PollList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.PollList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.PollList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.PollList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.PollList.toObject = function(includeInstance, msg) {
    var f, obj = {
      pollsList: jspb.Message.toObjectList(msg.getPollsList(),
        proto.FINNOQ_API.Poll.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.PollList}
 */
proto.FINNOQ_API.PollList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.PollList;
  return proto.FINNOQ_API.PollList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.PollList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.PollList}
 */
proto.FINNOQ_API.PollList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.Poll;
        reader.readMessage(value,proto.FINNOQ_API.Poll.deserializeBinaryFromReader);
        msg.addPolls(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.PollList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.PollList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.PollList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.PollList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPollsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.Poll.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Poll polls = 1;
 * @return {!Array<!proto.FINNOQ_API.Poll>}
 */
proto.FINNOQ_API.PollList.prototype.getPollsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Poll>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Poll, 1));
};


/** @param {!Array<!proto.FINNOQ_API.Poll>} value */
proto.FINNOQ_API.PollList.prototype.setPollsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.Poll=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Poll}
 */
proto.FINNOQ_API.PollList.prototype.addPolls = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.Poll, opt_index);
};


proto.FINNOQ_API.PollList.prototype.clearPollsList = function() {
  this.setPollsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.Question = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.Question.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.Question, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.Question.displayName = 'proto.FINNOQ_API.Question';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.Question.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.Question.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.Question.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.Question} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.Question.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      pollId: jspb.Message.getFieldWithDefault(msg, 2, 0),
      userId: jspb.Message.getFieldWithDefault(msg, 3, 0),
      txId: jspb.Message.getFieldWithDefault(msg, 4, ""),
      title: jspb.Message.getFieldWithDefault(msg, 5, ""),
      createdDate: (f = msg.getCreatedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
      media: jspb.Message.getFieldWithDefault(msg, 7, ""),
      groundTruthMedia: jspb.Message.getFieldWithDefault(msg, 8, ""),
      groundTruthText: jspb.Message.getFieldWithDefault(msg, 9, ""),
      answersList: jspb.Message.toObjectList(msg.getAnswersList(),
        proto.FINNOQ_API.Answer.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.Question}
 */
proto.FINNOQ_API.Question.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.Question;
  return proto.FINNOQ_API.Question.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.Question} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.Question}
 */
proto.FINNOQ_API.Question.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPollId(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUserId(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setTxId(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 6:
        var value = new google_protobuf_timestamp_pb.Timestamp;
        reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
        msg.setCreatedDate(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setMedia(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setGroundTruthMedia(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setGroundTruthText(value);
        break;
      case 10:
        var value = new proto.FINNOQ_API.Answer;
        reader.readMessage(value,proto.FINNOQ_API.Answer.deserializeBinaryFromReader);
        msg.addAnswers(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.Question.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.Question.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.Question} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.Question.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPollId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTxId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedDate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMedia();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGroundTruthMedia();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getGroundTruthText();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.FINNOQ_API.Answer.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.Question.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Question.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 poll_id = 2;
 * @return {number}
 */
proto.FINNOQ_API.Question.prototype.getPollId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Question.prototype.setPollId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 user_id = 3;
 * @return {number}
 */
proto.FINNOQ_API.Question.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Question.prototype.setUserId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string tx_id = 4;
 * @return {string}
 */
proto.FINNOQ_API.Question.prototype.getTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Question.prototype.setTxId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.FINNOQ_API.Question.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Question.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp created_date = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.FINNOQ_API.Question.prototype.getCreatedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.FINNOQ_API.Question.prototype.setCreatedDate = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.FINNOQ_API.Question.prototype.clearCreatedDate = function() {
  this.setCreatedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.Question.prototype.hasCreatedDate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string media = 7;
 * @return {string}
 */
proto.FINNOQ_API.Question.prototype.getMedia = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Question.prototype.setMedia = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string ground_truth_media = 8;
 * @return {string}
 */
proto.FINNOQ_API.Question.prototype.getGroundTruthMedia = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Question.prototype.setGroundTruthMedia = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string ground_truth_text = 9;
 * @return {string}
 */
proto.FINNOQ_API.Question.prototype.getGroundTruthText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Question.prototype.setGroundTruthText = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated Answer answers = 10;
 * @return {!Array<!proto.FINNOQ_API.Answer>}
 */
proto.FINNOQ_API.Question.prototype.getAnswersList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Answer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Answer, 10));
};


/** @param {!Array<!proto.FINNOQ_API.Answer>} value */
proto.FINNOQ_API.Question.prototype.setAnswersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.FINNOQ_API.Answer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Answer}
 */
proto.FINNOQ_API.Question.prototype.addAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.FINNOQ_API.Answer, opt_index);
};


proto.FINNOQ_API.Question.prototype.clearAnswersList = function() {
  this.setAnswersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.QuestionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.QuestionList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.QuestionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.QuestionList.displayName = 'proto.FINNOQ_API.QuestionList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.QuestionList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.QuestionList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.QuestionList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.QuestionList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.QuestionList.toObject = function(includeInstance, msg) {
    var f, obj = {
      questionsList: jspb.Message.toObjectList(msg.getQuestionsList(),
        proto.FINNOQ_API.Question.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.QuestionList}
 */
proto.FINNOQ_API.QuestionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.QuestionList;
  return proto.FINNOQ_API.QuestionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.QuestionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.QuestionList}
 */
proto.FINNOQ_API.QuestionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.Question;
        reader.readMessage(value,proto.FINNOQ_API.Question.deserializeBinaryFromReader);
        msg.addQuestions(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.QuestionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.QuestionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.QuestionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.QuestionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.Question.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Question questions = 1;
 * @return {!Array<!proto.FINNOQ_API.Question>}
 */
proto.FINNOQ_API.QuestionList.prototype.getQuestionsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Question>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Question, 1));
};


/** @param {!Array<!proto.FINNOQ_API.Question>} value */
proto.FINNOQ_API.QuestionList.prototype.setQuestionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.Question=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Question}
 */
proto.FINNOQ_API.QuestionList.prototype.addQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.Question, opt_index);
};


proto.FINNOQ_API.QuestionList.prototype.clearQuestionsList = function() {
  this.setQuestionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.Answer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.Answer.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.Answer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.Answer.displayName = 'proto.FINNOQ_API.Answer';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.Answer.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.Answer.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.Answer.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.Answer} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.Answer.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      questionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
      userId: jspb.Message.getFieldWithDefault(msg, 3, 0),
      txId: jspb.Message.getFieldWithDefault(msg, 4, ""),
      title: jspb.Message.getFieldWithDefault(msg, 5, ""),
      createdDate: (f = msg.getCreatedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
      totalVotes: jspb.Message.getFieldWithDefault(msg, 7, 0),
      media: jspb.Message.getFieldWithDefault(msg, 8, ""),
      votesList: jspb.Message.toObjectList(msg.getVotesList(),
        proto.FINNOQ_API.Vote.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.Answer}
 */
proto.FINNOQ_API.Answer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.Answer;
  return proto.FINNOQ_API.Answer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.Answer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.Answer}
 */
proto.FINNOQ_API.Answer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setQuestionId(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUserId(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setTxId(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 6:
        var value = new google_protobuf_timestamp_pb.Timestamp;
        reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
        msg.setCreatedDate(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setTotalVotes(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setMedia(value);
        break;
      case 9:
        var value = new proto.FINNOQ_API.Vote;
        reader.readMessage(value,proto.FINNOQ_API.Vote.deserializeBinaryFromReader);
        msg.addVotes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.Answer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.Answer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.Answer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.Answer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getQuestionId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTxId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedDate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTotalVotes();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getMedia();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getVotesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.FINNOQ_API.Vote.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.Answer.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Answer.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 question_id = 2;
 * @return {number}
 */
proto.FINNOQ_API.Answer.prototype.getQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Answer.prototype.setQuestionId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 user_id = 3;
 * @return {number}
 */
proto.FINNOQ_API.Answer.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Answer.prototype.setUserId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string tx_id = 4;
 * @return {string}
 */
proto.FINNOQ_API.Answer.prototype.getTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Answer.prototype.setTxId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.FINNOQ_API.Answer.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Answer.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp created_date = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.FINNOQ_API.Answer.prototype.getCreatedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.FINNOQ_API.Answer.prototype.setCreatedDate = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.FINNOQ_API.Answer.prototype.clearCreatedDate = function() {
  this.setCreatedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.Answer.prototype.hasCreatedDate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 total_votes = 7;
 * @return {number}
 */
proto.FINNOQ_API.Answer.prototype.getTotalVotes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Answer.prototype.setTotalVotes = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string media = 8;
 * @return {string}
 */
proto.FINNOQ_API.Answer.prototype.getMedia = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Answer.prototype.setMedia = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated Vote votes = 9;
 * @return {!Array<!proto.FINNOQ_API.Vote>}
 */
proto.FINNOQ_API.Answer.prototype.getVotesList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Vote>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Vote, 9));
};


/** @param {!Array<!proto.FINNOQ_API.Vote>} value */
proto.FINNOQ_API.Answer.prototype.setVotesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.FINNOQ_API.Vote=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Vote}
 */
proto.FINNOQ_API.Answer.prototype.addVotes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.FINNOQ_API.Vote, opt_index);
};


proto.FINNOQ_API.Answer.prototype.clearVotesList = function() {
  this.setVotesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.AnswerList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.AnswerList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.AnswerList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.AnswerList.displayName = 'proto.FINNOQ_API.AnswerList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.AnswerList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.AnswerList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.AnswerList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.AnswerList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.AnswerList.toObject = function(includeInstance, msg) {
    var f, obj = {
      answersList: jspb.Message.toObjectList(msg.getAnswersList(),
        proto.FINNOQ_API.Answer.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.AnswerList}
 */
proto.FINNOQ_API.AnswerList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.AnswerList;
  return proto.FINNOQ_API.AnswerList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.AnswerList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.AnswerList}
 */
proto.FINNOQ_API.AnswerList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.Answer;
        reader.readMessage(value,proto.FINNOQ_API.Answer.deserializeBinaryFromReader);
        msg.addAnswers(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.AnswerList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.AnswerList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.AnswerList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.AnswerList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.Answer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Answer answers = 1;
 * @return {!Array<!proto.FINNOQ_API.Answer>}
 */
proto.FINNOQ_API.AnswerList.prototype.getAnswersList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Answer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Answer, 1));
};


/** @param {!Array<!proto.FINNOQ_API.Answer>} value */
proto.FINNOQ_API.AnswerList.prototype.setAnswersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.Answer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Answer}
 */
proto.FINNOQ_API.AnswerList.prototype.addAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.Answer, opt_index);
};


proto.FINNOQ_API.AnswerList.prototype.clearAnswersList = function() {
  this.setAnswersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.Vote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.Vote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.Vote.displayName = 'proto.FINNOQ_API.Vote';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.Vote.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.Vote.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.Vote} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.Vote.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      answerId: jspb.Message.getFieldWithDefault(msg, 2, 0),
      userId: jspb.Message.getFieldWithDefault(msg, 3, 0),
      txIdCommit: jspb.Message.getFieldWithDefault(msg, 4, ""),
      txIdReveal: jspb.Message.getFieldWithDefault(msg, 5, ""),
      prediction: jspb.Message.getFieldWithDefault(msg, 6, 0),
      confidence: jspb.Message.getFieldWithDefault(msg, 7, 0),
      createdDate: (f = msg.getCreatedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.Vote}
 */
proto.FINNOQ_API.Vote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.Vote;
  return proto.FINNOQ_API.Vote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.Vote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.Vote}
 */
proto.FINNOQ_API.Vote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setAnswerId(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUserId(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setTxIdCommit(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setTxIdReveal(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPrediction(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setConfidence(value);
        break;
      case 8:
        var value = new google_protobuf_timestamp_pb.Timestamp;
        reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
        msg.setCreatedDate(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.Vote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.Vote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.Vote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.Vote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAnswerId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTxIdCommit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTxIdReveal();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPrediction();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getConfidence();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getCreatedDate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.Vote.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Vote.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 answer_id = 2;
 * @return {number}
 */
proto.FINNOQ_API.Vote.prototype.getAnswerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Vote.prototype.setAnswerId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 user_id = 3;
 * @return {number}
 */
proto.FINNOQ_API.Vote.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Vote.prototype.setUserId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string tx_id_commit = 4;
 * @return {string}
 */
proto.FINNOQ_API.Vote.prototype.getTxIdCommit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Vote.prototype.setTxIdCommit = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string tx_id_reveal = 5;
 * @return {string}
 */
proto.FINNOQ_API.Vote.prototype.getTxIdReveal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Vote.prototype.setTxIdReveal = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 prediction = 6;
 * @return {number}
 */
proto.FINNOQ_API.Vote.prototype.getPrediction = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Vote.prototype.setPrediction = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 confidence = 7;
 * @return {number}
 */
proto.FINNOQ_API.Vote.prototype.getConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Vote.prototype.setConfidence = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp created_date = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.FINNOQ_API.Vote.prototype.getCreatedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.FINNOQ_API.Vote.prototype.setCreatedDate = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.FINNOQ_API.Vote.prototype.clearCreatedDate = function() {
  this.setCreatedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.Vote.prototype.hasCreatedDate = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.VoteList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.VoteList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.VoteList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.VoteList.displayName = 'proto.FINNOQ_API.VoteList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.VoteList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.VoteList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.VoteList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.VoteList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.VoteList.toObject = function(includeInstance, msg) {
    var f, obj = {
      votesList: jspb.Message.toObjectList(msg.getVotesList(),
        proto.FINNOQ_API.Vote.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.VoteList}
 */
proto.FINNOQ_API.VoteList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.VoteList;
  return proto.FINNOQ_API.VoteList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.VoteList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.VoteList}
 */
proto.FINNOQ_API.VoteList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.Vote;
        reader.readMessage(value,proto.FINNOQ_API.Vote.deserializeBinaryFromReader);
        msg.addVotes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.VoteList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.VoteList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.VoteList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.VoteList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVotesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.Vote.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Vote votes = 1;
 * @return {!Array<!proto.FINNOQ_API.Vote>}
 */
proto.FINNOQ_API.VoteList.prototype.getVotesList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Vote>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Vote, 1));
};


/** @param {!Array<!proto.FINNOQ_API.Vote>} value */
proto.FINNOQ_API.VoteList.prototype.setVotesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.Vote=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Vote}
 */
proto.FINNOQ_API.VoteList.prototype.addVotes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.Vote, opt_index);
};


proto.FINNOQ_API.VoteList.prototype.clearVotesList = function() {
  this.setVotesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.Suggestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.Suggestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.Suggestion.displayName = 'proto.FINNOQ_API.Suggestion';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.Suggestion.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.Suggestion.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.Suggestion} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.Suggestion.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      text: jspb.Message.getFieldWithDefault(msg, 2, ""),
      userId: jspb.Message.getFieldWithDefault(msg, 3, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.Suggestion}
 */
proto.FINNOQ_API.Suggestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.Suggestion;
  return proto.FINNOQ_API.Suggestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.Suggestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.Suggestion}
 */
proto.FINNOQ_API.Suggestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setText(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUserId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.Suggestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.Suggestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.Suggestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.Suggestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.Suggestion.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Suggestion.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string text = 2;
 * @return {string}
 */
proto.FINNOQ_API.Suggestion.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Suggestion.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 user_id = 3;
 * @return {number}
 */
proto.FINNOQ_API.Suggestion.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Suggestion.prototype.setUserId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.SuggestionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.SuggestionList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.SuggestionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.SuggestionList.displayName = 'proto.FINNOQ_API.SuggestionList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.SuggestionList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.SuggestionList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.SuggestionList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.SuggestionList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.SuggestionList.toObject = function(includeInstance, msg) {
    var f, obj = {
      suggestionsList: jspb.Message.toObjectList(msg.getSuggestionsList(),
        proto.FINNOQ_API.Suggestion.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.SuggestionList}
 */
proto.FINNOQ_API.SuggestionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.SuggestionList;
  return proto.FINNOQ_API.SuggestionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.SuggestionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.SuggestionList}
 */
proto.FINNOQ_API.SuggestionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.Suggestion;
        reader.readMessage(value,proto.FINNOQ_API.Suggestion.deserializeBinaryFromReader);
        msg.addSuggestions(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.SuggestionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.SuggestionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.SuggestionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.SuggestionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuggestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.Suggestion.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Suggestion suggestions = 1;
 * @return {!Array<!proto.FINNOQ_API.Suggestion>}
 */
proto.FINNOQ_API.SuggestionList.prototype.getSuggestionsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Suggestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Suggestion, 1));
};


/** @param {!Array<!proto.FINNOQ_API.Suggestion>} value */
proto.FINNOQ_API.SuggestionList.prototype.setSuggestionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.Suggestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Suggestion}
 */
proto.FINNOQ_API.SuggestionList.prototype.addSuggestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.Suggestion, opt_index);
};


proto.FINNOQ_API.SuggestionList.prototype.clearSuggestionsList = function() {
  this.setSuggestionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.AnswerResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.AnswerResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.AnswerResult.displayName = 'proto.FINNOQ_API.AnswerResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.AnswerResult.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.AnswerResult.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.AnswerResult} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.AnswerResult.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      title: jspb.Message.getFieldWithDefault(msg, 2, ""),
      totalVotes: jspb.Message.getFieldWithDefault(msg, 3, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.AnswerResult}
 */
proto.FINNOQ_API.AnswerResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.AnswerResult;
  return proto.FINNOQ_API.AnswerResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.AnswerResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.AnswerResult}
 */
proto.FINNOQ_API.AnswerResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setTotalVotes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.AnswerResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.AnswerResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.AnswerResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.AnswerResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotalVotes();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.AnswerResult.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.AnswerResult.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.FINNOQ_API.AnswerResult.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.FINNOQ_API.AnswerResult.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 total_votes = 3;
 * @return {number}
 */
proto.FINNOQ_API.AnswerResult.prototype.getTotalVotes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.FINNOQ_API.AnswerResult.prototype.setTotalVotes = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.QuestionResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.QuestionResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.QuestionResult.displayName = 'proto.FINNOQ_API.QuestionResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.QuestionResult.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.QuestionResult.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.QuestionResult} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.QuestionResult.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      answer: (f = msg.getAnswer()) && proto.FINNOQ_API.AnswerResult.toObject(includeInstance, f),
      totalVotes: jspb.Message.getFieldWithDefault(msg, 3, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.QuestionResult}
 */
proto.FINNOQ_API.QuestionResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.QuestionResult;
  return proto.FINNOQ_API.QuestionResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.QuestionResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.QuestionResult}
 */
proto.FINNOQ_API.QuestionResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = new proto.FINNOQ_API.AnswerResult;
        reader.readMessage(value,proto.FINNOQ_API.AnswerResult.deserializeBinaryFromReader);
        msg.setAnswer(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setTotalVotes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.QuestionResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.QuestionResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.QuestionResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.QuestionResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAnswer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.FINNOQ_API.AnswerResult.serializeBinaryToWriter
    );
  }
  f = message.getTotalVotes();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.QuestionResult.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.QuestionResult.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional AnswerResult answer = 2;
 * @return {?proto.FINNOQ_API.AnswerResult}
 */
proto.FINNOQ_API.QuestionResult.prototype.getAnswer = function() {
  return /** @type{?proto.FINNOQ_API.AnswerResult} */ (
    jspb.Message.getWrapperField(this, proto.FINNOQ_API.AnswerResult, 2));
};


/** @param {?proto.FINNOQ_API.AnswerResult|undefined} value */
proto.FINNOQ_API.QuestionResult.prototype.setAnswer = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.FINNOQ_API.QuestionResult.prototype.clearAnswer = function() {
  this.setAnswer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.QuestionResult.prototype.hasAnswer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 total_votes = 3;
 * @return {number}
 */
proto.FINNOQ_API.QuestionResult.prototype.getTotalVotes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.FINNOQ_API.QuestionResult.prototype.setTotalVotes = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.PollResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.PollResult.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.PollResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.PollResult.displayName = 'proto.FINNOQ_API.PollResult';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.PollResult.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.PollResult.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.PollResult.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.PollResult} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.PollResult.toObject = function(includeInstance, msg) {
    var f, obj = {
      questionsList: jspb.Message.toObjectList(msg.getQuestionsList(),
        proto.FINNOQ_API.QuestionResult.toObject, includeInstance),
      totalVotes: jspb.Message.getFieldWithDefault(msg, 2, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.PollResult}
 */
proto.FINNOQ_API.PollResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.PollResult;
  return proto.FINNOQ_API.PollResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.PollResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.PollResult}
 */
proto.FINNOQ_API.PollResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.QuestionResult;
        reader.readMessage(value,proto.FINNOQ_API.QuestionResult.deserializeBinaryFromReader);
        msg.addQuestions(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setTotalVotes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.PollResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.PollResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.PollResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.PollResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.QuestionResult.serializeBinaryToWriter
    );
  }
  f = message.getTotalVotes();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated QuestionResult questions = 1;
 * @return {!Array<!proto.FINNOQ_API.QuestionResult>}
 */
proto.FINNOQ_API.PollResult.prototype.getQuestionsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.QuestionResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.QuestionResult, 1));
};


/** @param {!Array<!proto.FINNOQ_API.QuestionResult>} value */
proto.FINNOQ_API.PollResult.prototype.setQuestionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.QuestionResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.QuestionResult}
 */
proto.FINNOQ_API.PollResult.prototype.addQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.QuestionResult, opt_index);
};


proto.FINNOQ_API.PollResult.prototype.clearQuestionsList = function() {
  this.setQuestionsList([]);
};


/**
 * optional int32 total_votes = 2;
 * @return {number}
 */
proto.FINNOQ_API.PollResult.prototype.getTotalVotes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.FINNOQ_API.PollResult.prototype.setTotalVotes = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.UserPollLists = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.UserPollLists, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.UserPollLists.displayName = 'proto.FINNOQ_API.UserPollLists';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.UserPollLists.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.UserPollLists.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.UserPollLists} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.UserPollLists.toObject = function(includeInstance, msg) {
    var f, obj = {
      createdPolls: (f = msg.getCreatedPolls()) && proto.FINNOQ_API.PollList.toObject(includeInstance, f),
      participatedPolls: (f = msg.getParticipatedPolls()) && proto.FINNOQ_API.PollList.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.UserPollLists}
 */
proto.FINNOQ_API.UserPollLists.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.UserPollLists;
  return proto.FINNOQ_API.UserPollLists.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.UserPollLists} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.UserPollLists}
 */
proto.FINNOQ_API.UserPollLists.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.PollList;
        reader.readMessage(value,proto.FINNOQ_API.PollList.deserializeBinaryFromReader);
        msg.setCreatedPolls(value);
        break;
      case 2:
        var value = new proto.FINNOQ_API.PollList;
        reader.readMessage(value,proto.FINNOQ_API.PollList.deserializeBinaryFromReader);
        msg.setParticipatedPolls(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.UserPollLists.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.UserPollLists.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.UserPollLists} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.UserPollLists.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedPolls();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.FINNOQ_API.PollList.serializeBinaryToWriter
    );
  }
  f = message.getParticipatedPolls();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.FINNOQ_API.PollList.serializeBinaryToWriter
    );
  }
};


/**
 * optional PollList created_polls = 1;
 * @return {?proto.FINNOQ_API.PollList}
 */
proto.FINNOQ_API.UserPollLists.prototype.getCreatedPolls = function() {
  return /** @type{?proto.FINNOQ_API.PollList} */ (
    jspb.Message.getWrapperField(this, proto.FINNOQ_API.PollList, 1));
};


/** @param {?proto.FINNOQ_API.PollList|undefined} value */
proto.FINNOQ_API.UserPollLists.prototype.setCreatedPolls = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.FINNOQ_API.UserPollLists.prototype.clearCreatedPolls = function() {
  this.setCreatedPolls(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.UserPollLists.prototype.hasCreatedPolls = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PollList participated_polls = 2;
 * @return {?proto.FINNOQ_API.PollList}
 */
proto.FINNOQ_API.UserPollLists.prototype.getParticipatedPolls = function() {
  return /** @type{?proto.FINNOQ_API.PollList} */ (
    jspb.Message.getWrapperField(this, proto.FINNOQ_API.PollList, 2));
};


/** @param {?proto.FINNOQ_API.PollList|undefined} value */
proto.FINNOQ_API.UserPollLists.prototype.setParticipatedPolls = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.FINNOQ_API.UserPollLists.prototype.clearParticipatedPolls = function() {
  this.setParticipatedPolls(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.UserPollLists.prototype.hasParticipatedPolls = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.UserQuestionLists = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.UserQuestionLists, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.UserQuestionLists.displayName = 'proto.FINNOQ_API.UserQuestionLists';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.UserQuestionLists.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.UserQuestionLists.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.UserQuestionLists} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.UserQuestionLists.toObject = function(includeInstance, msg) {
    var f, obj = {
      createdQuestions: (f = msg.getCreatedQuestions()) && proto.FINNOQ_API.QuestionList.toObject(includeInstance, f),
      participatedQuestions: (f = msg.getParticipatedQuestions()) && proto.FINNOQ_API.QuestionList.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.UserQuestionLists}
 */
proto.FINNOQ_API.UserQuestionLists.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.UserQuestionLists;
  return proto.FINNOQ_API.UserQuestionLists.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.UserQuestionLists} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.UserQuestionLists}
 */
proto.FINNOQ_API.UserQuestionLists.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.QuestionList;
        reader.readMessage(value,proto.FINNOQ_API.QuestionList.deserializeBinaryFromReader);
        msg.setCreatedQuestions(value);
        break;
      case 2:
        var value = new proto.FINNOQ_API.QuestionList;
        reader.readMessage(value,proto.FINNOQ_API.QuestionList.deserializeBinaryFromReader);
        msg.setParticipatedQuestions(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.UserQuestionLists.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.UserQuestionLists.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.UserQuestionLists} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.UserQuestionLists.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedQuestions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.FINNOQ_API.QuestionList.serializeBinaryToWriter
    );
  }
  f = message.getParticipatedQuestions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.FINNOQ_API.QuestionList.serializeBinaryToWriter
    );
  }
};


/**
 * optional QuestionList created_questions = 1;
 * @return {?proto.FINNOQ_API.QuestionList}
 */
proto.FINNOQ_API.UserQuestionLists.prototype.getCreatedQuestions = function() {
  return /** @type{?proto.FINNOQ_API.QuestionList} */ (
    jspb.Message.getWrapperField(this, proto.FINNOQ_API.QuestionList, 1));
};


/** @param {?proto.FINNOQ_API.QuestionList|undefined} value */
proto.FINNOQ_API.UserQuestionLists.prototype.setCreatedQuestions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.FINNOQ_API.UserQuestionLists.prototype.clearCreatedQuestions = function() {
  this.setCreatedQuestions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.UserQuestionLists.prototype.hasCreatedQuestions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional QuestionList participated_questions = 2;
 * @return {?proto.FINNOQ_API.QuestionList}
 */
proto.FINNOQ_API.UserQuestionLists.prototype.getParticipatedQuestions = function() {
  return /** @type{?proto.FINNOQ_API.QuestionList} */ (
    jspb.Message.getWrapperField(this, proto.FINNOQ_API.QuestionList, 2));
};


/** @param {?proto.FINNOQ_API.QuestionList|undefined} value */
proto.FINNOQ_API.UserQuestionLists.prototype.setParticipatedQuestions = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.FINNOQ_API.UserQuestionLists.prototype.clearParticipatedQuestions = function() {
  this.setParticipatedQuestions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.UserQuestionLists.prototype.hasParticipatedQuestions = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.UserAnswerLists = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.UserAnswerLists, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.UserAnswerLists.displayName = 'proto.FINNOQ_API.UserAnswerLists';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.UserAnswerLists.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.UserAnswerLists.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.UserAnswerLists} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.UserAnswerLists.toObject = function(includeInstance, msg) {
    var f, obj = {
      createdAnswers: (f = msg.getCreatedAnswers()) && proto.FINNOQ_API.AnswerList.toObject(includeInstance, f),
      participatedAnswers: (f = msg.getParticipatedAnswers()) && proto.FINNOQ_API.AnswerList.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.UserAnswerLists}
 */
proto.FINNOQ_API.UserAnswerLists.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.UserAnswerLists;
  return proto.FINNOQ_API.UserAnswerLists.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.UserAnswerLists} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.UserAnswerLists}
 */
proto.FINNOQ_API.UserAnswerLists.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.AnswerList;
        reader.readMessage(value,proto.FINNOQ_API.AnswerList.deserializeBinaryFromReader);
        msg.setCreatedAnswers(value);
        break;
      case 2:
        var value = new proto.FINNOQ_API.AnswerList;
        reader.readMessage(value,proto.FINNOQ_API.AnswerList.deserializeBinaryFromReader);
        msg.setParticipatedAnswers(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.UserAnswerLists.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.UserAnswerLists.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.UserAnswerLists} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.UserAnswerLists.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedAnswers();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.FINNOQ_API.AnswerList.serializeBinaryToWriter
    );
  }
  f = message.getParticipatedAnswers();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.FINNOQ_API.AnswerList.serializeBinaryToWriter
    );
  }
};


/**
 * optional AnswerList created_answers = 1;
 * @return {?proto.FINNOQ_API.AnswerList}
 */
proto.FINNOQ_API.UserAnswerLists.prototype.getCreatedAnswers = function() {
  return /** @type{?proto.FINNOQ_API.AnswerList} */ (
    jspb.Message.getWrapperField(this, proto.FINNOQ_API.AnswerList, 1));
};


/** @param {?proto.FINNOQ_API.AnswerList|undefined} value */
proto.FINNOQ_API.UserAnswerLists.prototype.setCreatedAnswers = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.FINNOQ_API.UserAnswerLists.prototype.clearCreatedAnswers = function() {
  this.setCreatedAnswers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.UserAnswerLists.prototype.hasCreatedAnswers = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AnswerList participated_answers = 2;
 * @return {?proto.FINNOQ_API.AnswerList}
 */
proto.FINNOQ_API.UserAnswerLists.prototype.getParticipatedAnswers = function() {
  return /** @type{?proto.FINNOQ_API.AnswerList} */ (
    jspb.Message.getWrapperField(this, proto.FINNOQ_API.AnswerList, 2));
};


/** @param {?proto.FINNOQ_API.AnswerList|undefined} value */
proto.FINNOQ_API.UserAnswerLists.prototype.setParticipatedAnswers = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.FINNOQ_API.UserAnswerLists.prototype.clearParticipatedAnswers = function() {
  this.setParticipatedAnswers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.UserAnswerLists.prototype.hasParticipatedAnswers = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.Credit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.Credit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.Credit.displayName = 'proto.FINNOQ_API.Credit';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.Credit.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.Credit.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.Credit} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.Credit.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      pollId: jspb.Message.getFieldWithDefault(msg, 2, 0),
      questionId: jspb.Message.getFieldWithDefault(msg, 3, 0),
      userId: jspb.Message.getFieldWithDefault(msg, 4, 0),
      credits: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
      createdDate: (f = msg.getCreatedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.Credit}
 */
proto.FINNOQ_API.Credit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.Credit;
  return proto.FINNOQ_API.Credit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.Credit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.Credit}
 */
proto.FINNOQ_API.Credit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPollId(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setQuestionId(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUserId(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCredits(value);
        break;
      case 6:
        var value = new google_protobuf_timestamp_pb.Timestamp;
        reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
        msg.setCreatedDate(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.Credit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.Credit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.Credit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.Credit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPollId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getQuestionId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCredits();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getCreatedDate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.Credit.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Credit.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 poll_id = 2;
 * @return {number}
 */
proto.FINNOQ_API.Credit.prototype.getPollId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Credit.prototype.setPollId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 question_id = 3;
 * @return {number}
 */
proto.FINNOQ_API.Credit.prototype.getQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Credit.prototype.setQuestionId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 user_id = 4;
 * @return {number}
 */
proto.FINNOQ_API.Credit.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.FINNOQ_API.Credit.prototype.setUserId = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double credits = 5;
 * @return {number}
 */
proto.FINNOQ_API.Credit.prototype.getCredits = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.FINNOQ_API.Credit.prototype.setCredits = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp created_date = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.FINNOQ_API.Credit.prototype.getCreatedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.FINNOQ_API.Credit.prototype.setCreatedDate = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.FINNOQ_API.Credit.prototype.clearCreatedDate = function() {
  this.setCreatedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.Credit.prototype.hasCreatedDate = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.CreditList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.CreditList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.CreditList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.CreditList.displayName = 'proto.FINNOQ_API.CreditList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.CreditList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.CreditList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.CreditList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.CreditList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.CreditList.toObject = function(includeInstance, msg) {
    var f, obj = {
      creditsList: jspb.Message.toObjectList(msg.getCreditsList(),
        proto.FINNOQ_API.Credit.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.CreditList}
 */
proto.FINNOQ_API.CreditList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.CreditList;
  return proto.FINNOQ_API.CreditList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.CreditList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.CreditList}
 */
proto.FINNOQ_API.CreditList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.Credit;
        reader.readMessage(value,proto.FINNOQ_API.Credit.deserializeBinaryFromReader);
        msg.addCredits(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.CreditList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.CreditList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.CreditList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.CreditList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreditsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.Credit.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Credit credits = 1;
 * @return {!Array<!proto.FINNOQ_API.Credit>}
 */
proto.FINNOQ_API.CreditList.prototype.getCreditsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Credit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Credit, 1));
};


/** @param {!Array<!proto.FINNOQ_API.Credit>} value */
proto.FINNOQ_API.CreditList.prototype.setCreditsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.Credit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Credit}
 */
proto.FINNOQ_API.CreditList.prototype.addCredits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.Credit, opt_index);
};


proto.FINNOQ_API.CreditList.prototype.clearCreditsList = function() {
  this.setCreditsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.ReferralCredit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.ReferralCredit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.ReferralCredit.displayName = 'proto.FINNOQ_API.ReferralCredit';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.ReferralCredit.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.ReferralCredit.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.ReferralCredit} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.ReferralCredit.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      credits: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
      userReferralId: jspb.Message.getFieldWithDefault(msg, 3, 0),
      userResponseId: jspb.Message.getFieldWithDefault(msg, 4, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.ReferralCredit}
 */
proto.FINNOQ_API.ReferralCredit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.ReferralCredit;
  return proto.FINNOQ_API.ReferralCredit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.ReferralCredit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.ReferralCredit}
 */
proto.FINNOQ_API.ReferralCredit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCredits(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUserReferralId(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUserResponseId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.ReferralCredit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.ReferralCredit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.ReferralCredit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.ReferralCredit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCredits();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getUserReferralId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUserResponseId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.ReferralCredit.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.ReferralCredit.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double credits = 2;
 * @return {number}
 */
proto.FINNOQ_API.ReferralCredit.prototype.getCredits = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.FINNOQ_API.ReferralCredit.prototype.setCredits = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int32 user_referral_id = 3;
 * @return {number}
 */
proto.FINNOQ_API.ReferralCredit.prototype.getUserReferralId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.FINNOQ_API.ReferralCredit.prototype.setUserReferralId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 user_response_id = 4;
 * @return {number}
 */
proto.FINNOQ_API.ReferralCredit.prototype.getUserResponseId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.FINNOQ_API.ReferralCredit.prototype.setUserResponseId = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.ReferralCreditList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.ReferralCreditList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.ReferralCreditList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.ReferralCreditList.displayName = 'proto.FINNOQ_API.ReferralCreditList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.ReferralCreditList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.ReferralCreditList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.ReferralCreditList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.ReferralCreditList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.ReferralCreditList.toObject = function(includeInstance, msg) {
    var f, obj = {
      referralCreditsList: jspb.Message.toObjectList(msg.getReferralCreditsList(),
        proto.FINNOQ_API.ReferralCredit.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.ReferralCreditList}
 */
proto.FINNOQ_API.ReferralCreditList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.ReferralCreditList;
  return proto.FINNOQ_API.ReferralCreditList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.ReferralCreditList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.ReferralCreditList}
 */
proto.FINNOQ_API.ReferralCreditList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.ReferralCredit;
        reader.readMessage(value,proto.FINNOQ_API.ReferralCredit.deserializeBinaryFromReader);
        msg.addReferralCredits(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.ReferralCreditList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.ReferralCreditList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.ReferralCreditList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.ReferralCreditList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReferralCreditsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.ReferralCredit.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ReferralCredit referral_credits = 1;
 * @return {!Array<!proto.FINNOQ_API.ReferralCredit>}
 */
proto.FINNOQ_API.ReferralCreditList.prototype.getReferralCreditsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.ReferralCredit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.ReferralCredit, 1));
};


/** @param {!Array<!proto.FINNOQ_API.ReferralCredit>} value */
proto.FINNOQ_API.ReferralCreditList.prototype.setReferralCreditsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.ReferralCredit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.ReferralCredit}
 */
proto.FINNOQ_API.ReferralCreditList.prototype.addReferralCredits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.ReferralCredit, opt_index);
};


proto.FINNOQ_API.ReferralCreditList.prototype.clearReferralCreditsList = function() {
  this.setReferralCreditsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.ReferralResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.ReferralResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.ReferralResponse.displayName = 'proto.FINNOQ_API.ReferralResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.ReferralResponse.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.ReferralResponse.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.ReferralResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.ReferralResponse.toObject = function(includeInstance, msg) {
    var f, obj = {
      id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      sessionKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
      ipAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
      action: jspb.Message.getFieldWithDefault(msg, 4, ""),
      targetObjectId: jspb.Message.getFieldWithDefault(msg, 5, 0),
      createdDate: (f = msg.getCreatedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
      referralId: jspb.Message.getFieldWithDefault(msg, 7, 0),
      targetContentTypeId: jspb.Message.getFieldWithDefault(msg, 8, 0),
      userId: jspb.Message.getFieldWithDefault(msg, 9, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.ReferralResponse}
 */
proto.FINNOQ_API.ReferralResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.ReferralResponse;
  return proto.FINNOQ_API.ReferralResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.ReferralResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.ReferralResponse}
 */
proto.FINNOQ_API.ReferralResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setSessionKey(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setIpAddress(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setAction(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setTargetObjectId(value);
        break;
      case 6:
        var value = new google_protobuf_timestamp_pb.Timestamp;
        reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
        msg.setCreatedDate(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setReferralId(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setTargetContentTypeId(value);
        break;
      case 9:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUserId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.ReferralResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.ReferralResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.ReferralResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.ReferralResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSessionKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIpAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAction();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTargetObjectId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCreatedDate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getReferralId();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getTargetContentTypeId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.FINNOQ_API.ReferralResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.ReferralResponse.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string session_key = 2;
 * @return {string}
 */
proto.FINNOQ_API.ReferralResponse.prototype.getSessionKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.FINNOQ_API.ReferralResponse.prototype.setSessionKey = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ip_address = 3;
 * @return {string}
 */
proto.FINNOQ_API.ReferralResponse.prototype.getIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.FINNOQ_API.ReferralResponse.prototype.setIpAddress = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string action = 4;
 * @return {string}
 */
proto.FINNOQ_API.ReferralResponse.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.FINNOQ_API.ReferralResponse.prototype.setAction = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 target_object_id = 5;
 * @return {number}
 */
proto.FINNOQ_API.ReferralResponse.prototype.getTargetObjectId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.FINNOQ_API.ReferralResponse.prototype.setTargetObjectId = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp created_date = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.FINNOQ_API.ReferralResponse.prototype.getCreatedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.FINNOQ_API.ReferralResponse.prototype.setCreatedDate = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.FINNOQ_API.ReferralResponse.prototype.clearCreatedDate = function() {
  this.setCreatedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.ReferralResponse.prototype.hasCreatedDate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 referral_id = 7;
 * @return {number}
 */
proto.FINNOQ_API.ReferralResponse.prototype.getReferralId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.FINNOQ_API.ReferralResponse.prototype.setReferralId = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 target_content_type_id = 8;
 * @return {number}
 */
proto.FINNOQ_API.ReferralResponse.prototype.getTargetContentTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.FINNOQ_API.ReferralResponse.prototype.setTargetContentTypeId = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 user_id = 9;
 * @return {number}
 */
proto.FINNOQ_API.ReferralResponse.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.FINNOQ_API.ReferralResponse.prototype.setUserId = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.ReferralResponseList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.ReferralResponseList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.ReferralResponseList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.ReferralResponseList.displayName = 'proto.FINNOQ_API.ReferralResponseList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.ReferralResponseList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.ReferralResponseList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.ReferralResponseList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.ReferralResponseList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.ReferralResponseList.toObject = function(includeInstance, msg) {
    var f, obj = {
      referralResponsesList: jspb.Message.toObjectList(msg.getReferralResponsesList(),
        proto.FINNOQ_API.ReferralResponse.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.ReferralResponseList}
 */
proto.FINNOQ_API.ReferralResponseList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.ReferralResponseList;
  return proto.FINNOQ_API.ReferralResponseList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.ReferralResponseList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.ReferralResponseList}
 */
proto.FINNOQ_API.ReferralResponseList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.ReferralResponse;
        reader.readMessage(value,proto.FINNOQ_API.ReferralResponse.deserializeBinaryFromReader);
        msg.addReferralResponses(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.ReferralResponseList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.ReferralResponseList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.ReferralResponseList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.ReferralResponseList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReferralResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.ReferralResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ReferralResponse referral_responses = 1;
 * @return {!Array<!proto.FINNOQ_API.ReferralResponse>}
 */
proto.FINNOQ_API.ReferralResponseList.prototype.getReferralResponsesList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.ReferralResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.ReferralResponse, 1));
};


/** @param {!Array<!proto.FINNOQ_API.ReferralResponse>} value */
proto.FINNOQ_API.ReferralResponseList.prototype.setReferralResponsesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.ReferralResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.ReferralResponse}
 */
proto.FINNOQ_API.ReferralResponseList.prototype.addReferralResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.ReferralResponse, opt_index);
};


proto.FINNOQ_API.ReferralResponseList.prototype.clearReferralResponsesList = function() {
  this.setReferralResponsesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.UserLeadboard = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.UserLeadboard, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.UserLeadboard.displayName = 'proto.FINNOQ_API.UserLeadboard';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.UserLeadboard.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.UserLeadboard.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.UserLeadboard} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.UserLeadboard.toObject = function(includeInstance, msg) {
    var f, obj = {
      position: jspb.Message.getFieldWithDefault(msg, 1, 0),
      eth: jspb.Message.getFieldWithDefault(msg, 2, ""),
      credits: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
      totalParticipatedPolls: jspb.Message.getFieldWithDefault(msg, 4, 0),
      totalRightVotes: jspb.Message.getFieldWithDefault(msg, 5, 0),
      totalWrongVotes: jspb.Message.getFieldWithDefault(msg, 6, 0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.UserLeadboard}
 */
proto.FINNOQ_API.UserLeadboard.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.UserLeadboard;
  return proto.FINNOQ_API.UserLeadboard.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.UserLeadboard} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.UserLeadboard}
 */
proto.FINNOQ_API.UserLeadboard.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPosition(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setEth(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setCredits(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setTotalParticipatedPolls(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setTotalRightVotes(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setTotalWrongVotes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.UserLeadboard.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.UserLeadboard.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.UserLeadboard} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.UserLeadboard.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getEth();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCredits();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTotalParticipatedPolls();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTotalRightVotes();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTotalWrongVotes();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int32 position = 1;
 * @return {number}
 */
proto.FINNOQ_API.UserLeadboard.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.FINNOQ_API.UserLeadboard.prototype.setPosition = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string eth = 2;
 * @return {string}
 */
proto.FINNOQ_API.UserLeadboard.prototype.getEth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.FINNOQ_API.UserLeadboard.prototype.setEth = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double credits = 3;
 * @return {number}
 */
proto.FINNOQ_API.UserLeadboard.prototype.getCredits = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.FINNOQ_API.UserLeadboard.prototype.setCredits = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional int32 total_participated_polls = 4;
 * @return {number}
 */
proto.FINNOQ_API.UserLeadboard.prototype.getTotalParticipatedPolls = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.FINNOQ_API.UserLeadboard.prototype.setTotalParticipatedPolls = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 total_right_votes = 5;
 * @return {number}
 */
proto.FINNOQ_API.UserLeadboard.prototype.getTotalRightVotes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.FINNOQ_API.UserLeadboard.prototype.setTotalRightVotes = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 total_wrong_votes = 6;
 * @return {number}
 */
proto.FINNOQ_API.UserLeadboard.prototype.getTotalWrongVotes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.FINNOQ_API.UserLeadboard.prototype.setTotalWrongVotes = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.Leaderboard = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.Leaderboard.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.Leaderboard, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.Leaderboard.displayName = 'proto.FINNOQ_API.Leaderboard';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.Leaderboard.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.Leaderboard.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.Leaderboard.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.Leaderboard} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.Leaderboard.toObject = function(includeInstance, msg) {
    var f, obj = {
      leaderboardList: jspb.Message.toObjectList(msg.getLeaderboardList(),
        proto.FINNOQ_API.UserLeadboard.toObject, includeInstance),
      currentUser: (f = msg.getCurrentUser()) && proto.FINNOQ_API.UserLeadboard.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.Leaderboard}
 */
proto.FINNOQ_API.Leaderboard.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.Leaderboard;
  return proto.FINNOQ_API.Leaderboard.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.Leaderboard} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.Leaderboard}
 */
proto.FINNOQ_API.Leaderboard.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.FINNOQ_API.UserLeadboard;
        reader.readMessage(value,proto.FINNOQ_API.UserLeadboard.deserializeBinaryFromReader);
        msg.addLeaderboard(value);
        break;
      case 2:
        var value = new proto.FINNOQ_API.UserLeadboard;
        reader.readMessage(value,proto.FINNOQ_API.UserLeadboard.deserializeBinaryFromReader);
        msg.setCurrentUser(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.Leaderboard.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.Leaderboard.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.Leaderboard} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.Leaderboard.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeaderboardList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FINNOQ_API.UserLeadboard.serializeBinaryToWriter
    );
  }
  f = message.getCurrentUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.FINNOQ_API.UserLeadboard.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserLeadboard leaderboard = 1;
 * @return {!Array<!proto.FINNOQ_API.UserLeadboard>}
 */
proto.FINNOQ_API.Leaderboard.prototype.getLeaderboardList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.UserLeadboard>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.UserLeadboard, 1));
};


/** @param {!Array<!proto.FINNOQ_API.UserLeadboard>} value */
proto.FINNOQ_API.Leaderboard.prototype.setLeaderboardList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FINNOQ_API.UserLeadboard=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.UserLeadboard}
 */
proto.FINNOQ_API.Leaderboard.prototype.addLeaderboard = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FINNOQ_API.UserLeadboard, opt_index);
};


proto.FINNOQ_API.Leaderboard.prototype.clearLeaderboardList = function() {
  this.setLeaderboardList([]);
};


/**
 * optional UserLeadboard current_user = 2;
 * @return {?proto.FINNOQ_API.UserLeadboard}
 */
proto.FINNOQ_API.Leaderboard.prototype.getCurrentUser = function() {
  return /** @type{?proto.FINNOQ_API.UserLeadboard} */ (
    jspb.Message.getWrapperField(this, proto.FINNOQ_API.UserLeadboard, 2));
};


/** @param {?proto.FINNOQ_API.UserLeadboard|undefined} value */
proto.FINNOQ_API.Leaderboard.prototype.setCurrentUser = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.FINNOQ_API.Leaderboard.prototype.clearCurrentUser = function() {
  this.setCurrentUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.Leaderboard.prototype.hasCurrentUser = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.Transaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.Transaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.Transaction.displayName = 'proto.FINNOQ_API.Transaction';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.Transaction.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.Transaction.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.Transaction} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.Transaction.toObject = function(includeInstance, msg) {
    var f, obj = {
      transaction: jspb.Message.getFieldWithDefault(msg, 1, ""),
      createdDate: (f = msg.getCreatedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.Transaction}
 */
proto.FINNOQ_API.Transaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.Transaction;
  return proto.FINNOQ_API.Transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.Transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.Transaction}
 */
proto.FINNOQ_API.Transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTransaction(value);
        break;
      case 2:
        var value = new google_protobuf_timestamp_pb.Timestamp;
        reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
        msg.setCreatedDate(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.Transaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.Transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.Transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.Transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedDate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string transaction = 1;
 * @return {string}
 */
proto.FINNOQ_API.Transaction.prototype.getTransaction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.FINNOQ_API.Transaction.prototype.setTransaction = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp created_date = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.FINNOQ_API.Transaction.prototype.getCreatedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.FINNOQ_API.Transaction.prototype.setCreatedDate = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.FINNOQ_API.Transaction.prototype.clearCreatedDate = function() {
  this.setCreatedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.FINNOQ_API.Transaction.prototype.hasCreatedDate = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.TransactionsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FINNOQ_API.TransactionsList.repeatedFields_, null);
};
goog.inherits(proto.FINNOQ_API.TransactionsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.TransactionsList.displayName = 'proto.FINNOQ_API.TransactionsList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FINNOQ_API.TransactionsList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.TransactionsList.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.TransactionsList.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.TransactionsList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.TransactionsList.toObject = function(includeInstance, msg) {
    var f, obj = {
      type: jspb.Message.getFieldWithDefault(msg, 1, 0),
      transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
        proto.FINNOQ_API.Transaction.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.TransactionsList}
 */
proto.FINNOQ_API.TransactionsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.TransactionsList;
  return proto.FINNOQ_API.TransactionsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.TransactionsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.TransactionsList}
 */
proto.FINNOQ_API.TransactionsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.FINNOQ_API.TransactionsList.Type} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 2:
        var value = new proto.FINNOQ_API.Transaction;
        reader.readMessage(value,proto.FINNOQ_API.Transaction.deserializeBinaryFromReader);
        msg.addTransactions(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.TransactionsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.TransactionsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.TransactionsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.TransactionsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.FINNOQ_API.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.FINNOQ_API.TransactionsList.Type = {
  UNDEFINED_TYPE: 0,
  POLL: 1,
  QUESTION: 2
};

/**
 * optional Type type = 1;
 * @return {!proto.FINNOQ_API.TransactionsList.Type}
 */
proto.FINNOQ_API.TransactionsList.prototype.getType = function() {
  return /** @type {!proto.FINNOQ_API.TransactionsList.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.FINNOQ_API.TransactionsList.Type} value */
proto.FINNOQ_API.TransactionsList.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated Transaction transactions = 2;
 * @return {!Array<!proto.FINNOQ_API.Transaction>}
 */
proto.FINNOQ_API.TransactionsList.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.FINNOQ_API.Transaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FINNOQ_API.Transaction, 2));
};


/** @param {!Array<!proto.FINNOQ_API.Transaction>} value */
proto.FINNOQ_API.TransactionsList.prototype.setTransactionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.FINNOQ_API.Transaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FINNOQ_API.Transaction}
 */
proto.FINNOQ_API.TransactionsList.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.FINNOQ_API.Transaction, opt_index);
};


proto.FINNOQ_API.TransactionsList.prototype.clearTransactionsList = function() {
  this.setTransactionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FINNOQ_API.FirebaseToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FINNOQ_API.FirebaseToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FINNOQ_API.FirebaseToken.displayName = 'proto.FINNOQ_API.FirebaseToken';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.FINNOQ_API.FirebaseToken.prototype.toObject = function(opt_includeInstance) {
    return proto.FINNOQ_API.FirebaseToken.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.FINNOQ_API.FirebaseToken} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.FINNOQ_API.FirebaseToken.toObject = function(includeInstance, msg) {
    var f, obj = {
      token: jspb.Message.getFieldWithDefault(msg, 1, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FINNOQ_API.FirebaseToken}
 */
proto.FINNOQ_API.FirebaseToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FINNOQ_API.FirebaseToken;
  return proto.FINNOQ_API.FirebaseToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FINNOQ_API.FirebaseToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FINNOQ_API.FirebaseToken}
 */
proto.FINNOQ_API.FirebaseToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setToken(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FINNOQ_API.FirebaseToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FINNOQ_API.FirebaseToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FINNOQ_API.FirebaseToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FINNOQ_API.FirebaseToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.FINNOQ_API.FirebaseToken.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.FINNOQ_API.FirebaseToken.prototype.setToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.FINNOQ_API);
